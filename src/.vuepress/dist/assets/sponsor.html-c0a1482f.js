import{_ as r,r as n,o as l,c as i,e,f as o,b as d,d as t}from"./app-fd6e861a.js";const s="/assets/1-f8ef9e96.png",a={},h={href:"https://theme-hope.vuejs.press/zh/config/theme/behavior.html",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"{ custom: true }",-1),p=e("code",null,"@theme-hope",-1),_=e("h2",{id:"替换组件的方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#替换组件的方式","aria-hidden":"true"},"#"),o(" 替换组件的方式")],-1),f=e("p",null,[o("你需要在自己的 VuePress 配置文件通过 "),e("code",null,"alias"),o(" 替换主题中使用的组件别名。")],-1),m={href:"https://theme-hope.vuejs.press/zh/guide/advanced/replace.html#%E6%9B%BF%E6%8D%A2%E7%BB%84%E4%BB%B6%E7%9A%84%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,[o("本章要说的是对于 "),e("strong",null,"插槽利用"),o("，以实现 "),e("strong",null,"赞赏"),o(" 的功能。")],-1),b=e("h2",{id:"插槽利用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#插槽利用","aria-hidden":"true"},"#"),o(" 插槽利用")],-1),v={href:"https://theme-hope.vuejs.press/zh/guide/advanced/replace.html#%E6%8F%92%E6%A7%BD%E5%88%A9%E7%94%A8",target:"_blank",rel:"noopener noreferrer"},B=e("p",null,[o("有些组件提供了插槽，在这种情况下，你可以在覆盖组件时直接引入原组件，并通过插槽传入你需要的内容。通过这个特性可以实现传入"),e("strong",null,"赞赏组件"),o("。")],-1),S={class:"hint-container details"},A=e("summary",null,"插槽位置示例",-1),E={href:"https://theme-hope.vuejs.press/zh/demo/slot.html",target:"_blank",rel:"noopener noreferrer"},k=e("figure",null,[e("img",{src:s,alt:"1",tabindex:"0",loading:"lazy"}),e("figcaption",null,"1")],-1),x=t('<details class="hint-container details"><summary>提供插槽的组件</summary><p><strong>主题</strong>:</p><ul><li><code>AutoLink</code>: <code>default</code>, <code>before</code>, <code>after</code></li><li><code>CommonWrapper</code>: <code>default</code>, <code>navbarStartBefore</code>, <code>navbarStartAfter</code>, <code>navbarCenterBefore</code>, <code>navbarCenterAfter</code>, <code>navbarEndBefore</code>, <code>navbarEndAfter</code>, <code>navScreenTop</code>, <code>navScreenBottom</code>, <code>sidebar</code>, <code>sidebarTop</code>, <code>sidebarBottom</code></li><li><code>HeroInfo</code>: <code>heroImage</code>, <code>heroInfo</code>, <code>heroBg</code><ul><li><code>heroInfo</code> 插槽将接收 <code>text</code> <code>tagline</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroImage</code> 插槽将接收 <code>image</code> <code>imageDark</code> <code>heroStyle</code> <code>alt</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroBg</code> 插槽将接收 <code>image</code> <code>bgStyle</code> 和 <code>isFullScreen</code> 属性。</li></ul></li><li><code>HomePage</code>: <code>top</code>, <code>center</code>, <code>bottom</code></li><li><code>NormalPage</code>: <code>top</code>, <code>contentBefore</code>, <code>contentAfter</code>, <code>bottom</code>, <code>tocBefore</code>, <code>tocAfter</code></li></ul><p><strong>博客</strong>：</p><ul><li><code>ArticleItem</code>: <code>title</code>, <code>cover</code>, <code>info</code>, <code>excerpt</code><ul><li><code>title</code> 插槽将接收 <code>title</code> <code>isEncrypted</code> 和 <code>type</code> 属性。</li><li><code>excerpt</code> 插槽将接收 <code>excerpt</code> 属性。</li><li><code>cover</code> 插槽将接收 <code>cover</code> 属性。</li><li><code>info</code> 插槽将接收 <code>info</code> 属性。</li></ul></li><li><code>BlogHero</code>: <code>heroBg</code>, <code>heroInfo</code><ul><li><code>heroInfo</code> 插槽将接收 <code>text</code> <code>tagline</code> <code>image</code> <code>imageDark</code> <code>heroStyle</code> <code>alt</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroBg</code> 插槽将接收 <code>image</code> <code>bgStyle</code> 和 <code>isFullScreen</code> 属性。</li></ul></li></ul><p><strong>导航栏</strong>:</p><ul><li><code>DropdownLink</code>: <code>title</code></li><li><code>NavActions</code>: <code>before</code>, <code>after</code></li><li><code>Navbar</code>: <code>startBefore</code>, <code>startAfter</code>, <code>centerBefore</code>, <code>centerAfter</code>, <code>endBefore</code>, <code>endAfter</code></li><li><code>NavbarBrand</code>: <code>default</code></li><li><code>NavScreen</code>: <code>before</code>, <code>after</code></li><li><code>NavScreenDropdown</code>: <code>before</code>, <code>after</code></li></ul><p><strong>侧边栏</strong>:</p><ul><li><code>Sidebar</code>: <code>top</code>, <code>default</code>, <code>bottom</code></li></ul><p><strong>TOC</strong>:</p><ul><li><code>TOC</code>: <code>before</code>, <code>after</code></li></ul></details>',1),y={class:"hint-container info"},N=e("p",{class:"hint-container-title"},"相关信息",-1),I={href:"https://github.com/vuepress-theme-hope/vuepress-theme-hope/tree/main/packages/theme/src/client/",target:"_blank",rel:"noopener noreferrer"},F=e("h2",{id:"实现赞赏",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#实现赞赏","aria-hidden":"true"},"#"),o(" 实现赞赏")],-1),L={class:"hint-container tip"},C=e("p",{class:"hint-container-title"},"思路",-1),D=e("code",null,"Sponsor.vue",-1),T={href:"https://github.com/OrageKK/sponsor-page",target:"_blank",rel:"noopener noreferrer"},V=t("<li>赞赏使用在所有页面，创建<code>Layout.vue</code>布局，覆盖掉主题默认同名<code>Layout.vue</code>布局</li><li>将<code>Sponsor.vue</code>组件传入到<code>Layout.vue</code>布局的<code>NormalPage:contentAfter</code>中</li><li>在<code>.vuepress/client.ts</code>文件下，覆盖掉的默认的布局<code>layouts:{ Layout }</code></li>",3);function z(P,j){const c=n("ExternalLinkIcon");return l(),i("div",null,[e("p",null,[o("VuePress-Theme-Hope主题，当在 "),e("a",h,[o("行为选项"),d(c)]),o(" 中设置 "),u,o(" 时，主题将通过 "),p,o(" 别名来引入组件，所以你可以利用这一点来替换主题的任何一个组件。")]),_,f,e("p",null,[o("具体步骤参考官方文档 "),e("a",m,[o("替换组件的方式"),d(c)])]),g,b,e("p",null,[o("关于插槽的详细使用参考官方文档 "),e("a",v,[o("插槽利用"),d(c)])]),B,e("details",S,[A,e("p",null,[o("常用插槽位置示例，详见 "),e("a",E,[o("主布局插槽演示"),d(c)]),o("。")]),k]),x,e("div",y,[N,e("p",null,[o("对于每个插槽的对应位置和功能，请详见 "),e("a",I,[o("主题源码"),d(c)]),o(" 。")])]),F,e("div",L,[C,e("ol",null,[e("li",null,[o("下载赞赏组件 "),D,o("，添加到项目组件目录下。"),e("a",T,[o("组件"),d(c)])]),V])])])}const O=r(a,[["render",z],["__file","sponsor.html.vue"]]);export{O as default};
