<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://boxsir.gitee.io/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://boxsir.gitee.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>盒子小屋</title>
    <link>https://boxsir.gitee.io/</link>
    <description>盒子先生的博客</description>
    <language>zh-CN</language>
    <pubDate>Wed, 18 Oct 2023 09:47:52 GMT</pubDate>
    <lastBuildDate>Wed, 18 Oct 2023 09:47:52 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>小屋地图</category>
    <category>项目</category>
    <category>笔记</category>
    <category>使用指南</category>
    <item>
      <title>小屋地图</title>
      <link>https://boxsir.gitee.io/about/map.html</link>
      <guid>https://boxsir.gitee.io/about/map.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">小屋地图</source>
      <description>小屋地图</description>
      <category>小屋地图</category>
      <pubDate>Fri, 13 Oct 2023 03:27:25 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 小屋地图</h1>
]]></content:encoded>
    </item>
    <item>
      <title>刀客</title>
      <link>https://boxsir.gitee.io/item/web/springBoot/daoke.html</link>
      <guid>https://boxsir.gitee.io/item/web/springBoot/daoke.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">刀客</source>
      <description>刀客 平台简介 墨客带刀，万物共生！ 前端采用Vue、Element UI。 后端采用Spring Boot、Spring Security、Redis &amp;amp; Jwt。 权限认证使用Jwt，支持多终端认证系统。 支持加载动态权限菜单，多方式轻松权限控制。</description>
      <category>项目</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 刀客</h1>
<h2> 平台简介</h2>
<p>墨客带刀，万物共生！</p>
<ul>
<li>前端采用Vue、Element UI。</li>
<li>后端采用Spring Boot、Spring Security、Redis &amp; Jwt。</li>
<li>权限认证使用Jwt，支持多终端认证系统。</li>
<li>支持加载动态权限菜单，多方式轻松权限控制。</li>
</ul>
<!-- more -->
<h2> 在线体验</h2>
<ul>
<li>刀客官网：<a href="http://www.daoke.space" target="_blank" rel="noopener noreferrer">http://www.daoke.space(opens new window)</a></li>
<li>演示地址：<a href="http://demo.daoke.space" target="_blank" rel="noopener noreferrer">http://demo.daoke.space(opens new window)</a></li>
<li>代码下载：<a href="https://gitee.com/idaoke/idaoke" target="_blank" rel="noopener noreferrer">https://gitee.com/idaoke/idaoke</a></li>
</ul>
<h2> 内置功能</h2>
<p>（1）系统管理</p>
<ul>
<li>用户管理：用户是系统操作者，该功能主要完成系统用户配置。</li>
<li>部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。</li>
<li>岗位管理：配置系统用户所属担任职务。</li>
<li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li>
<li>角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。</li>
<li>字典管理：对系统中经常使用的一些较为固定的数据进行维护。</li>
<li>参数管理：对系统动态配置常用参数。</li>
<li>通知公告：系统通知公告信息发布维护。</li>
<li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li>
<li>登录日志：系统登录日志记录查询包含登录异常。</li>
<li>在线用户：当前系统中活跃用户状态监控。</li>
<li>定时任务：在线（添加、修改、删除)任务调度包含执行结果日志。</li>
<li>代码生成：前后端代码的生成（java、html、xml、sql）支持CRUD下载 。</li>
<li>系统接口：根据业务代码自动生成相关的api接口文档。</li>
<li>服务监控：监视当前系统CPU、内存、磁盘、堆栈等相关信息。</li>
<li>缓存监控：对系统的缓存信息查询，命令统计等。</li>
<li>在线构建器：拖动表单元素生成相应的HTML代码。</li>
<li>连接池监视：监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。</li>
</ul>
<p>（2）店铺管理</p>
<ul>
<li>店员管理：维护店员信息，店员是会员的管理者。</li>
<li>会员管理：会员信息，账单信息，积分信息。</li>
<li>收入报表：生成各时间段会员人数，充值人数，每日人流，收入金额等的Echart图。</li>
</ul>
<p>（3）物业管理</p>
<ul>
<li>建设中</li>
</ul>
<p>（4）打卡管理</p>
<ul>
<li>建设中</li>
</ul>
<h2> 技术选型</h2>
<p><strong>1、系统环境</strong></p>
<ul>
<li>Java EE 8</li>
<li>Servlet 3.0</li>
<li>Apache Maven 3</li>
</ul>
<p><strong>2、主框架</strong></p>
<ul>
<li>Spring Boot 2.5.x</li>
<li>Spring Framework 5.2.x</li>
<li>Spring Security 5.2.x</li>
</ul>
<p><strong>3、持久层</strong></p>
<ul>
<li>Apache Mybatis-plus 3.4.x</li>
<li>Hibernate Validation 6.0.x</li>
<li>Alibaba Druid 1.2.x</li>
</ul>
<p><strong>4、视图层</strong></p>
<ul>
<li>Vue 2.6.x</li>
<li>Axios 0.21.x</li>
<li>Element 2.15.x</li>
</ul>
<h2> 主要特性</h2>
<ul>
<li>完全响应式布局（支持电脑、平板、手机等所有主流设备）</li>
<li>强大的一键生成功能（包括控制器、模型、视图、菜单等）</li>
<li>支持多数据源，简单配置即可实现切换。</li>
<li>支持按钮及数据权限，可自定义部门数据权限。</li>
<li>对常用js插件进行二次封装，使js代码变得简洁，更加易维护</li>
<li>完善的XSS防范及脚本过滤，彻底杜绝XSS攻击</li>
<li>Maven多项目依赖，模块及插件分项目，尽量松耦合，方便模块升级、增减模块。</li>
<li>国际化支持，服务端及客户端支持</li>
<li>完善的日志记录体系简单注解即可实现</li>
<li>支持服务监控，数据监控，缓存监控功能。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>工程启动时建表和填充数据</title>
      <link>https://boxsir.gitee.io/notes/after/springBoot/createDatabase.html</link>
      <guid>https://boxsir.gitee.io/notes/after/springBoot/createDatabase.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">工程启动时建表和填充数据</source>
      <description>相关信息 SpringBoot工程启动 建表和填充数据</description>
      <category>笔记</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>SpringBoot工程启动 建表和填充数据</p>
</div>
<!-- more -->
<p>本例适用版本：</p>
<p>SpringBoot：2.7.4</p>
<p>Kingbase：8.6.0</p>
<p>不保证本例在其它版本依然适用</p>
<p>先决条件：</p>
<p>SpringBoot工程能与目标DB顺畅连接。</p>
<p>下面正文开始：</p>
<p>1.在application.properties中加入以下文字：</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sql.init.mode有always、embedded、never三个选项，一般再需要建表时填always，如果表已经建立完毕须改成never；</p>
<p>schema-locations是建表语句文件所在，本例中的schema.sql是这样书写的：</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>data-locations是给表充值文件所在，本例中data.sql是这样书写的：</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上文件的物理位置见下图：<br>
</p>
<p>2.以上三处就绪后运行程序，如果报错就检查sql语句有没有纰漏，如果不报错就表示建表成功了</p>
]]></content:encoded>
    </item>
    <item>
      <title>SpringBoot全局异常处理</title>
      <link>https://boxsir.gitee.io/notes/after/springBoot/exceptionHandling.html</link>
      <guid>https://boxsir.gitee.io/notes/after/springBoot/exceptionHandling.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">SpringBoot全局异常处理</source>
      <description>相关信息 java全局异常处理</description>
      <category>笔记</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container info">
<p class="hint-container-title">相关信息</p>
<p>java全局异常处理</p>
</div>
<!-- more -->
<h4> 6.1、制造异常</h4>
<p><strong>除以0</strong></p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们想让异常结果也显示为统一的返回结果对象，并且统一处理系统的异常信息，那么需要统一异常处理。</p>
<h4> 6.2、全局异常处理</h4>
<h5> 6.2.1、创建统一异常处理器</h5>
<p>创建处理类</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 6.2.1、测试</h5>
<h4> 6.3、处理特定异常</h4>
<h5> 6.3.1、添加异常处理方法</h5>
<p><strong>GlobalExceptionHandler.java中添加</strong></p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 6.3.2、测试</h5>
<h4> 6.4、处理自定义异常</h4>
<h5> 6.4.1、创建自定义异常类</h5>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 6.4.2、业务中需要位置抛出</h5>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 6.4.3、添加异常处理方法</h5>
<p><strong>GlobalExceptionHandler.java中添加</strong></p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>嵌入式相关开源项目、库、资料</title>
      <link>https://boxsir.gitee.io/notes/iot/embedded.html</link>
      <guid>https://boxsir.gitee.io/notes/iot/embedded.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">嵌入式相关开源项目、库、资料</source>
      <description>嵌入式相关开源项目、库、资料 学习初期最难找的就是找学习资料了，本贴精心汇总了一些嵌入式相关资源，包括但不限于编程语言、单片机、开源项目、物联网、操作系统、Linux、计算机等资源，并且在不断地更新中，致力于打造全网最全的嵌入式资料库。有好的嵌入式相关资源的朋友欢迎做贡献，利人利己。 收录公开资料仅为了方便大家进行学习。如果你认为本仓库的一些文件侵犯了您的权益，请 向我反馈 。我将会从仓库中彻底清除这些文件。 以下为最新资料汇总： gitee：https://gitee.com/zhengnianli/EmbedSummary github：https://github.com/zhengnianli/EmbedSummary</description>
      <category>笔记</category>
      <pubDate>Thu, 12 Oct 2023 12:20:23 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 嵌入式相关开源项目、库、资料</h1>
<p>学习初期最难找的就是找学习资料了，本贴精心汇总了一些嵌入式相关资源，包括但不限于编程语言、单片机、开源项目、物联网、操作系统、Linux、计算机等资源，并且在不断地更新中，致力于打造全网最全的嵌入式资料库。有好的嵌入式相关资源的朋友欢迎做贡献，利人利己。</p>
<blockquote>
<p>收录公开资料仅为了方便大家进行学习。如果你认为本仓库的一些文件侵犯了您的权益，请 向我反馈 。我将会从仓库中彻底清除这些文件。</p>
</blockquote>
<p>以下为最新资料汇总：</p>
<blockquote>
<p>gitee：<a href="https://gitee.com/zhengnianli/EmbedSummary" target="_blank" rel="noopener noreferrer">https://gitee.com/zhengnianli/EmbedSummary</a></p>
<p>github：<a href="https://github.com/zhengnianli/EmbedSummary" target="_blank" rel="noopener noreferrer">https://github.com/zhengnianli/EmbedSummary</a></p>
</blockquote>
<h2> 1、OS</h2>
<p><a href="https://openharmony.gitee.com/openharmony" target="_blank" rel="noopener noreferrer">鸿蒙OS</a>： 一款面向全场景的开源分布式操作系统。</p>
<p><a href="https://github.com/RT-Thread" target="_blank" rel="noopener noreferrer">RT-Thread</a>：一款小而美的物联网操作系统。</p>
<p><a href="https://github.com/Tencent/TencentOS-tiny" target="_blank" rel="noopener noreferrer">TencentOS tiny</a>：一款面向物联网领域开发的实时操作系统。</p>
<p><a href="https://www.freertos.org/" target="_blank" rel="noopener noreferrer">freertos</a>： 一个轻量级的操作系统。</p>
<p><a href="https://www.micrium.com/rtos/" target="_blank" rel="noopener noreferrer">µC/OS </a>：一个功能齐全的嵌入式操作系统。</p>
<p><a href="https://azure.microsoft.com/zh-cn/services/rtos/#overview" target="_blank" rel="noopener noreferrer">Azure RTOS</a>：Azure RTOS 是一个嵌入式开发套件。</p>
<p><a href="https://gitee.com/event-os/eventos-nano" target="_blank" rel="noopener noreferrer">eventos-nano</a>：一个超轻量级嵌入式开发框架，事件驱动，占用资源小，可运用于各型单片机。</p>
<p><a href="https://www.zephyrproject.org/" target="_blank" rel="noopener noreferrer">zephyr</a>：Zephyr 是 Linux 基金会推出的一个适用于物联网的小型可伸缩的实时操作系统。</p>
<p><a href="https://github.com/ARMmbed/mbed-os" target="_blank" rel="noopener noreferrer">mbed-os</a> ：ARM自己打造、主打IoT的一整套软件解决方案 。</p>
<p><a href="https://gitee.com/notrynohigh/BabyOS" target="_blank" rel="noopener noreferrer">BabyOS</a>： 专为MCU项目开发提速的代码框架 。</p>
<p><a href="https://gitee.com/openLuat/LuatOS" target="_blank" rel="noopener noreferrer">LuatOS</a> ： LuatOS是运行在嵌入式硬件的实时操作系统，只需要少量内存的flash空间就能运行，用户编写lua代码就可完成各种功能。</p>
<p><a href="https://github.com/contiki-os/contiki" target="_blank" rel="noopener noreferrer">Contiki-OS</a>： 一个小型的，开源的，极易移植的多任务操作系统。</p>
<p><a href="http://www.djyos.com/" target="_blank" rel="noopener noreferrer">DJYOS</a>： 都江堰操作系统。</p>
<p><a href="https://gitee.com/kerndev/klite" target="_blank" rel="noopener noreferrer">klite</a> ： 简洁易用的嵌入式操作系统内核。</p>
<p><a href="https://gitee.com/lmnos/lmosem" target="_blank" rel="noopener noreferrer">lmosem</a> ： 一个完全从第一行引导代码开始编写，基于ARM平台，支持多进程、多CPU、内存管理、文件与设备管理的全32位操作系统内核。</p>
<p><a href="http://www.freenos.org/" target="_blank" rel="noopener noreferrer">freenos</a>：FreeNOS微内核操作系统。</p>
<p><a href="www.ros.org">ros</a>：机器人操作系统。</p>
<p><a href="https://oldwiki.archive.openwrt.org/zh-cn/doc/start" target="_blank" rel="noopener noreferrer">openwrt</a>：openwrt文档。</p>
<p><a href="https://gitee.com/schuck/cola_os" target="_blank" rel="noopener noreferrer">cola_os</a>：300行代码实现多任务管理的OS。</p>
<p><a href="https://github.com/MS-RTOS" target="_blank" rel="noopener noreferrer">MS-RTOS</a>： Micro Safe RTOS 。</p>
<p>更多资源敬请期待......</p>
<h2> 2、实用库 / 框架</h2>
<p><a href="https://gitee.com/zlgopen/ametal" target="_blank" rel="noopener noreferrer">ametal</a>或<a href="https://github.com/zlgopen/ametal" target="_blank" rel="noopener noreferrer">ametal</a>：AMetal是芯片级的裸机软件包，定义了跨平台的通用接口。</p>
<p><a href="https://github.com/Water-Melon/Melon" target="_blank" rel="noopener noreferrer">Melon</a>：一个用于简化开发的 C 框架库。</p>
<p><a href="https://github.com/HardySimpson/zlog" target="_blank" rel="noopener noreferrer">zlog</a>：一个高可靠性、高性能、纯C日志函数库。</p>
<p><a href="https://github.com/armink/EasyLogger" target="_blank" rel="noopener noreferrer">EasyLogger</a>：一款超轻量级、高性能的 C/C++ 日志库。</p>
<p><a href="https://github.com/jolin90/smartconfig" target="_blank" rel="noopener noreferrer">Smartlink</a>：Linux上实现的smartconfig。</p>
<p><a href="https://github.com/heyuanjie87/airkissOpen" target="_blank" rel="noopener noreferrer">airkissOpen</a> ：腾讯airkiss协议解析库 。</p>
<p><a href="https://gitee.com/moluo-tech/CodeBrick" target="_blank" rel="noopener noreferrer">CodeBrick</a>：一种无OS的MCU实用软件管理系统。</p>
<p><a href="https://gitee.com/moluo-tech/ril" target="_blank" rel="noopener noreferrer">RIL</a>：一款专门为嵌入式平台开发的无线通信模块(GSM/GPRS/CatM1/NB)管理框架。</p>
<p><a href="https://github.com/DaveGamble/cJSON" target="_blank" rel="noopener noreferrer">cJSON</a>：一个基于C语言的轻量级的JSON解析库。</p>
<p><a href="https://github.com/zserge/jsmn" target="_blank" rel="noopener noreferrer">jsmn</a>：一个小巧的基于C语言的JSON解析库。</p>
<p><a href="https://github.com/benhoyt/inih" target="_blank" rel="noopener noreferrer">inih</a>：  C 语言编写的 INI 文件解析器。</p>
<p><a href="https://github.com/0x1abin/MultiTimer" target="_blank" rel="noopener noreferrer"> MultiTimer </a>： 一个软件定时器扩展模块。</p>
<p><a href="https://github.com/0x1abin/MultiButton" target="_blank" rel="noopener noreferrer">MultiButton</a>： 一个小巧简单易用的事件驱动型按键驱动模块。</p>
<p><a href="https://github.com/lmooml/SmartTimer" target="_blank" rel="noopener noreferrer"> SmartTimer </a>： 一个轻量级的基于STM32的定时器调度器 。</p>
<p><a href="https://github.com/murphyzhao/FlexibleButton" target="_blank" rel="noopener noreferrer">FlexibleButton</a>：一个基于标准 C 语言的小巧灵活的按键处理库。</p>
<p><a href="https://github.com/armink/CmBacktrace" target="_blank" rel="noopener noreferrer">CmBacktrace</a> ： 一款针对 ARM Cortex-M 系列 MCU 的错误代码自动追踪库。</p>
<p><a href="https://github.com/armink/EasyLogger" target="_blank" rel="noopener noreferrer">EasyLogger</a>：一款超轻量级、高性能的 C/C++ 日志库。</p>
<p><a href="https://github.com/dianjixz/limlog" target="_blank" rel="noopener noreferrer">limlog</a> ：一款超轻量级、高性能的 C/C++ 日志库。</p>
<p><a href="https://github.com/Iyengar111/NanoLog" target="_blank" rel="noopener noreferrer">NanoLog</a> ：一款超轻量级、高性能的 C/C++ 日志库。</p>
<p><a href="https://github.com/armink/EasyFlash" target="_blank" rel="noopener noreferrer">EasyFlash</a>：一款开源的轻量级嵌入式Flash存储器库 。</p>
<p><a href="https://github.com/armink/SFUD" target="_blank" rel="noopener noreferrer">SFUD</a>：一款开源的串行 SPI Flash 通用驱动库。</p>
<p><a href="https://sourceforge.net/projects/lwoopc/" target="_blank" rel="noopener noreferrer">lw_oopc</a>：轻量级的C语言面向对象编程框架。</p>
<p><a href="https://github.com/GorgonMeducer/PLOOC" target="_blank" rel="noopener noreferrer">PLOOC</a>：受保护的低开销面向对象编程。</p>
<p><a href="https://github.com/jiejieTop/cmd-parser" target="_blank" rel="noopener noreferrer">cmd-parser</a>：一个非常简单好用的命令解析器。</p>
<p><a href="https://github.com/jiejieTop/mqttclient" target="_blank" rel="noopener noreferrer">mqttclient</a>：一个省资源、高稳定的MQTT客户端。</p>
<p><a href="https://gitee.com/PISCES_X/NorthFrame" target="_blank" rel="noopener noreferrer">NorthFrame</a> ：一个单片机极简图形化状态机框架 。</p>
<p><a href="https://github.com/NevermindZZT/letter-shell" target="_blank" rel="noopener noreferrer">letter-shell</a>：一个功能强大的嵌入式shell。</p>
<p><a href="https://gitee.com/nrush/nr_micro_shell" target="_blank" rel="noopener noreferrer">nr_micro_shell</a> ： shell for MCU，单片机命令行交互。</p>
<p><a href="https://github.com/izzimat/pigweed" target="_blank" rel="noopener noreferrer">pigweed</a>：谷歌开源的嵌入式目标库（模块）集合。</p>
<p><a href="https://github.com/MaJerle/lwrb" target="_blank" rel="noopener noreferrer">lwrb</a>：一个轻量级通用环缓冲区管理器库。</p>
<p><a href="https://gitee.com/yorkjia/cQueue" target="_blank" rel="noopener noreferrer">cQueue</a> ：使用ANSI C 编写的消息队列功能函数。</p>
<p><a href="https://github.com/ThrowTheSwitch/Unity/releases" target="_blank" rel="noopener noreferrer">Unity</a>：一个轻量级的、适合嵌入式的测试框架。</p>
<p><a href="https://sourceforge.net/projects/embunit" target="_blank" rel="noopener noreferrer">Embedded Unit</a>： 是个纯标准c构建的单元测试框架。</p>
<p><a href="https://sourceforge.net/projects/cutest/" target="_blank" rel="noopener noreferrer">CuTest </a>：一款微小的C语言单元测试框， 全部代码加起来不到一千行。</p>
<p><a href="https://github.com/google/cmockery" target="_blank" rel="noopener noreferrer">cmockery</a>： 谷歌C单元测试框架。</p>
<p><a href="https://github.com/google/googletest" target="_blank" rel="noopener noreferrer">googletest</a>：谷歌C++测试框架。</p>
<p><a href="https://gitee.com/dbembed/znfat?_from=gitee_search" target="_blank" rel="noopener noreferrer"> znfat </a>：振南fat，国产嵌入式文件系统方案 。</p>
<p><a href="https://github.com/koanlogic/libu" target="_blank" rel="noopener noreferrer">libu</a>：一个C语言写的多平台工具库。</p>
<p><a href="https://gitee.com/tboox/tbox" target="_blank" rel="noopener noreferrer">tbox</a>：一个用c语言实现的跨平台开发库。</p>
<p><a href="https://github.com/cproape/toolkit" target="_blank" rel="noopener noreferrer">toolkit</a>：ToolKit是一套应用于嵌入式系统的通用工具包。</p>
<p><a href="http://savannah.nongnu.org/projects/lwip/" target="_blank" rel="noopener noreferrer">LWIP</a>： 一个小型开源的TCP/IP协议栈 。</p>
<p><a href="https://www.sqlite.org/download.html" target="_blank" rel="noopener noreferrer"> SQLite </a>：一个开源的嵌入式关系数据库。</p>
<p><a href="https://sourceforge.net/projects/openblt/files/" target="_blank" rel="noopener noreferrer">OpenBLT</a>：一种开源引导加载程序。</p>
<p><a href="https://gitee.com/tinylab/linux-lab" target="_blank" rel="noopener noreferrer">Linux Lab</a> ： Linux 内核实验室，基于 Docker/Qemu 的极速 Linux 内核学习、开发和测试环境。</p>
<p><a href="https://github.com/heyuanjie87/airkissOpen" target="_blank" rel="noopener noreferrer">airkissOpen</a> ：腾讯airkiss协议解析库 。</p>
<p><a href="https://github.com/ARMmbed/mbedtls" target="_blank" rel="noopener noreferrer">mbedtls</a> ：一个开源、便携,易于使用,可读的和灵活的SSL库。</p>
<p><a href="https://github.com/eclipse/mosquitto" target="_blank" rel="noopener noreferrer">mosquitto</a>或<a href="https://gitee.com/zhengnianli/mosquitto" target="_blank" rel="noopener noreferrer">mosquitto(下载速度快)</a>：一个开源的MQTT代理。</p>
<p><a href="https://github.com/benhoyt/inih" target="_blank" rel="noopener noreferrer">inih</a>：C 语言编写的 INI 文件解析器。</p>
<p><a href="http://www.state-machine.com/" target="_blank" rel="noopener noreferrer">QP</a>：QP实时嵌入式框架。</p>
<p><a href="https://github.com/MS-RTOS" target="_blank" rel="noopener noreferrer">MS-RTOS</a>：Micro Safe RTOS 。</p>
<p><a href="https://github.com/protobuf-c/protobuf-c/wiki/Examples" target="_blank" rel="noopener noreferrer">protobuf-c</a>：protobuf-c。</p>
<p><a href="https://gitee.com/wtau_zaozao/eepromfs?_from=gitee_search" target="_blank" rel="noopener noreferrer">eepromfs</a>： 基于EEPROM的简易类文件的数据读写库 。</p>
<p><a href="https://gitee.com/gozfreee/gear-lib" target="_blank" rel="noopener noreferrer">gear-lib</a> ： 适用于IOT/嵌入式/网络服务开发的C库 。</p>
<p><a href="https://gitee.com/simpost/mult_timer" target="_blank" rel="noopener noreferrer">mult_timer</a> ： 一个Linux下的超级精简的多重定时器 。</p>
<p><a href="https://gitee.com/simpost/EFSM" target="_blank" rel="noopener noreferrer">EFSM</a> ： 是一个基于事件驱动的有限状态机 。</p>
<p><a href="https://easyx.cn/" target="_blank" rel="noopener noreferrer">EasyX</a>：一个免费的图形库。</p>
<p><a href="https://gitee.com/tboox/tbox" target="_blank" rel="noopener noreferrer">tbox</a>：一个用c语言实现的跨平台开发库。</p>
<p><a href="https://code.woboq.org/userspace/glibc/misc/sys/queue.h.html" target="_blank" rel="noopener noreferrer">sys/queue.h</a>：用宏实现的常用数据结构。</p>
<p><a href="https://nanomsg.org/" target="_blank" rel="noopener noreferrer">nanomsg</a>：一个实现了几种“可扩展协议”的高性能通信库。</p>
<p><a href="http://acme.com/software/thttpd/" target="_blank" rel="noopener noreferrer">thttpd</a>：一个简单，小型，可移植，快速且安全的HTTP服务器。</p>
<p><a href="http://www.boa.org/" target="_blank" rel="noopener noreferrer">boa</a>：一个小巧高效的web服务器。</p>
<p><a href="https://freetype.org/" target="_blank" rel="noopener noreferrer">FreeTpye</a> ：字体渲染库。</p>
<p><a href="https://github.com/QuantumLeaps/qpc" target="_blank" rel="noopener noreferrer">qpc</a> ：一个开源的状态机实现。</p>
<p><a href="https://github.com/QuantumLeaps" target="_blank" rel="noopener noreferrer">Quantum Leaps</a> ：状态机组织。</p>
<p><a href="https://github.com/ZBar/ZBar" target="_blank" rel="noopener noreferrer">ZBar</a> ：二维码扫描工具和开发包.</p>
<p><a href="https://github.com/FFmpeg/FFmpeg" target="_blank" rel="noopener noreferrer">FFmpeg</a> ：多媒体处理工具库.</p>
<p><a href="https://github.com/ethz-asl/libnabo" target="_blank" rel="noopener noreferrer">libnabo</a> ：是一个快速为低维度空间提供K最近邻居算法库。</p>
<p><a href="https://github.com/dheeraj-2000/dsalgo" target="_blank" rel="noopener noreferrer">DSAL</a>：是一个经典的数据结构和算法库。</p>
<p><a href="http://www.flintlib.org/" target="_blank" rel="noopener noreferrer">FLINT</a> ：是一个数论库，用C语言编写，它包括一个非常快的多项式算法库。</p>
<p><a href="http://www.oschina.net/p/libmmseg" target="_blank" rel="noopener noreferrer">LibMMSeg</a>：中文分词软件包 。</p>
<p><a href="http://libcds.sourceforge.net/" target="_blank" rel="noopener noreferrer">CDS</a>：CDS是一个 C++ 模板库，包含 lock-free and fine-grained 算法。</p>
<p><a href="http://hashlib2plus.sourceforge.net/" target="_blank" rel="noopener noreferrer">hashlib++</a>：是一个简单易用的用来生成 checksum 算法。</p>
<p><a href="https://github.com/activesys/libcstl" target="_blank" rel="noopener noreferrer">libcstl</a>：C语言编写的一个通用的数据结构和常用的算法库。</p>
<p><a href="http://botan.randombit.net/" target="_blank" rel="noopener noreferrer">Botan</a>：Botan 是一个 C++ 的加密算法库。</p>
<p><a href="http://www.cgal.org/" target="_blank" rel="noopener noreferrer">CGAL</a>：计算几何算法库。</p>
<p><a href="http://www.ismll.uni-hildesheim.de/mymedialite/" target="_blank" rel="noopener noreferrer">MyMediaLite</a>：是一个轻量级的多用途的推荐系统的算法库。</p>
<p><a href="http://www.netlib.org/f2c/" target="_blank" rel="noopener noreferrer">cblas</a>：提供c接口的blas库，源码通过f2c转换为C语言。f2c官网。</p>
<p><a href="">clapack</a>：提供c接口的lapack库，源码通过f2c转换为C语言。</p>
<p><a href="">scalapack</a>：提供并行运算的lapack库，源码用fortran编写。</p>
<p><a href="">armadillo</a>：线性代数运算库，源码用c++编写。</p>
<p><a href="">openblas</a>：针对intel cpu优化的blas库。</p>
<p><a href="">mkl</a>：扩展的且针对intel cpu优化的库，包括快速傅立叶变换（FFT）、矢量数学库。</p>
<p><a href="">eigen</a>：C++写的线性代数运算库。</p>
<p><a href="https://latelee.blog.csdn.net/article/details/6918543?utm_medium=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase" target="_blank" rel="noopener noreferrer">libjpeg</a>：用libjpeg库在LCD上显示图片。</p>
<p><a href="https://code.videolan.org/videolan/x264" target="_blank" rel="noopener noreferrer">x264</a>：x264开源的解码编码库。</p>
<p><a href="https://github.com/hepingood/ws2812b" target="_blank" rel="noopener noreferrer">ws2812</a>：ws2812驱动库。</p>
<p>更多资源敬请期待......</p>
<h2> 3、GUI相关</h2>
<p><a href="https://gitee.com/idea4good/GuiLite" target="_blank" rel="noopener noreferrer">GuiLite</a>：大道至简 - 5千行/仅头文件/全平台GUI库 。</p>
<p><a href="https://www.yoxios.com/" target="_blank" rel="noopener noreferrer">yoxios</a>：  基于Linux开发的轻量级物联网系统和硬件平台。</p>
<p><a href="https://www.touchgfx.com/zh/" target="_blank" rel="noopener noreferrer">ToughGFX</a>： 一个C++编写的GUI软件框架 。</p>
<p><a href="https://www.segger.com/products/user-interface/emwin/" target="_blank" rel="noopener noreferrer">emwin</a>：一个老牌GUI库。</p>
<p><a href="https://gitee.com/mirrors/lvgl" target="_blank" rel="noopener noreferrer">littlevGL</a> ： 一个免费的开源图形库。</p>
<p><a href="https://gitee.com/mzy2364/LittlevGL_Demo" target="_blank" rel="noopener noreferrer">野牛 LittlevGL demo</a>：基于野牛开发板的 LittlevGL  demo 程序 。</p>
<p><a href="https://gitee.com/liuxinouc/MonoGUI" target="_blank" rel="noopener noreferrer"> MonoGUI </a>：一个黑白图形用户接口系统 。</p>
<p><a href="http://www.minigui.com/download" target="_blank" rel="noopener noreferrer">MiniGUI</a>： 一个快速、稳定、跨操作系统的GUI。</p>
<p><a href="https://www.qt.io/developers" target="_blank" rel="noopener noreferrer">QT</a>：跨平台的应用程序和用户界面框架。</p>
<p><a href="https://download.qt.io/new_archive/qt/" target="_blank" rel="noopener noreferrer">QT_Creator</a>：QT_Creator下载链接。</p>
<p><a href="https://www.gtk.org/" target="_blank" rel="noopener noreferrer">Gtk</a>： 一个用于创造图形用户接口的图形库。</p>
<p><a href="https://gitee.com/zlgopen/awtk?_from=gitee_search" target="_blank" rel="noopener noreferrer">AWTK</a>：是 ZLG 倾心打造的一套基于 C 语言开发的 GUI 框架 。</p>
<p><a href="https://www.yuque.com/books/share/3317aaa7-f47f-4bfd-a4c2-7e64e7f1c4be?#" target="_blank" rel="noopener noreferrer">玲珑GUI</a>：玲珑GUI教程页。</p>
<p><a href="https://github.com/nothings/stb" target="_blank" rel="noopener noreferrer">std</a> ：一个嵌入式小型图形库。</p>
<p><a href="https://gitee.com/cuihongxi/CUIGUI" target="_blank" rel="noopener noreferrer">CUGUI</a>：为单片机写的GUI ，支持字体，按键，图片，滑动条。</p>
<p>更多资源敬请期待......</p>
<h2> 4、项目 / 软硬结合</h2>
<p><a href="https://github.com/peng-zhihui/ElectronBot" target="_blank" rel="noopener noreferrer">ElectronBot</a>：一个桌面级小机器人。</p>
<p><a href="https://github.com/peng-zhihui/Planck-Pi" target="_blank" rel="noopener noreferrer">Planck-Pi</a>：超迷你Linux开发板。</p>
<p><a href="https://github.com/whik/qt_2019_ncov" target="_blank" rel="noopener noreferrer">qt_2019_ncov</a>：基于Qt/C++实现的新冠肺炎疫情监控平台。</p>
<p><a href="https://gitee.com/armfly/H7-TOOL_STM32H7_App" target="_blank" rel="noopener noreferrer">H7-TOOL_STM32H7_App</a> ：安富莱H7-TOOL 多功能开发工具。</p>
<p><a href="https://gitee.com/wangpeng25/the-little-bili-tv" target="_blank" rel="noopener noreferrer">the-little-bili-tv</a>：基于esp32+lvgl8.0的哔哩哔哩小电视。</p>
<p><a href="https://github.com/ARMmbed/DAPLink" target="_blank" rel="noopener noreferrer">DAPLink/CMSIS DAP</a>：一个调试器， 集成下载、调试和USB虚拟串口。</p>
<p><a href="http://www.crazepony.com/" target="_blank" rel="noopener noreferrer">Crazepony</a>：Crazepony开源四轴飞行器。</p>
<p><a href="https://github.com/billhsu/MiniQ" target="_blank" rel="noopener noreferrer">MiniQ</a> ：一个迷你四轴飞行器。</p>
<p><a href="https://github.com/AlexKlimaj/LiPow-Firmware" target="_blank" rel="noopener noreferrer">LiPow-Firmware</a>：基于STM32G0采用USB type-C供电的开源锂电池充电器。</p>
<p><a href="https://github.com/avem-labs/Avem" target="_blank" rel="noopener noreferrer">Avem</a>： 一个轻量级无人机飞控。</p>
<p><a href="https://gitee.com/lengff/esp8266-lattice-clock-open" target="_blank" rel="noopener noreferrer"> esp8266-lattice-clock</a>：Esp8266多功能点阵时钟。</p>
<p><a href="https://github.com/TonyIOT/SoftWareSerial" target="_blank" rel="noopener noreferrer">SoftWareSerial</a>：一个STM32 IO口模拟实现软件串口程序。</p>
<p><a href="https://github.com/nicekwell/stm32ISP" target="_blank" rel="noopener noreferrer">串口ISP程序</a>：一个stm32串口ISP程序。</p>
<p><a href="https://github.com/Seeed-Studio/DSO_Nano" target="_blank" rel="noopener noreferrer">DSO_Nano</a> ：一个手持示波器。</p>
<p><a href="https://github.com/DreamSourceLab/DSView" target="_blank" rel="noopener noreferrer">DSView</a>： 一个跨平台的逻辑分析仪。</p>
<p><a href="https://github.com/cjeeks/MCU-Development" target="_blank" rel="noopener noreferrer">MCU-Development</a>： 基于51、430、STM32F10X、STM32F407X、T4MC123G平台的各常见硬件模块demo。</p>
<p><a href="https://github.com/arduino/Arduino" target="_blank" rel="noopener noreferrer">Arduino</a> ： 开源电子原型平台。</p>
<p><a href="https://github.com/lemire/EWAHBoolArray" target="_blank" rel="noopener noreferrer"> EWAHBoolArray</a>： bitmap算法。</p>
<p><a href="https://github.com/pengshulin/mcush" target="_blank" rel="noopener noreferrer">mcush</a>：MCU shell。</p>
<p><a href="https://github.com/zhangyuhu/DoST" target="_blank" rel="noopener noreferrer">DoST</a>： Linux 下开发 STM32 。</p>
<p><a href="https://github.com/avem-labs/Avem" target="_blank" rel="noopener noreferrer">Avem</a> : 这是一个轻量级无人机飞控项目。</p>
<p>更多资源敬请期待......</p>
<h2> 5、资源 / 工具 / 网站 / 论坛</h2>
<p><a href="http://download.100ask.org/" target="_blank" rel="noopener noreferrer">100ask download</a>：百文网资料下载中心。</p>
<p><a href="http://www.armbbs.cn/forum.php" target="_blank" rel="noopener noreferrer">armfly</a>：安富莱/硬汉嵌入式论坛。</p>
<p><a href="https://ebf-products.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener noreferrer">fire download</a>：野火资料下载中心。</p>
<p><a href="http://www.openedv.com/docs/index.html" target="_blank" rel="noopener noreferrer">openedv download</a>：正点原子资料下载中心。</p>
<p><a href="https://www.firebbs.cn/forum.php" target="_blank" rel="noopener noreferrer">野火</a>：野火电子论坛。</p>
<p><a href="http://www.openedv.com/forum.php" target="_blank" rel="noopener noreferrer">正点</a>：正点原子论坛。</p>
<p><a href="https://royqh1979.gitee.io/redpandacpp/" target="_blank" rel="noopener noreferrer">小熊猫C++ IDE</a>：跨平台、轻量易用的开源C/C++集成开发环境。</p>
<p><a href="https://www.stmcu.org.cn/module/forum/forum.php" target="_blank" rel="noopener noreferrer">ST</a>：ST中文社区。</p>
<p><a href="http://bbs.topeetboard.com/forum.php" target="_blank" rel="noopener noreferrer">讯为开发社区</a>：北京讯为ARM开发社区。</p>
<p><a href="http://www.topeetboard.com/" target="_blank" rel="noopener noreferrer">讯为官网</a>：讯为官网。</p>
<p><a href="https://www.nxpic.org.cn/" target="_blank" rel="noopener noreferrer">NXP社区</a>：恩智浦论坛。</p>
<p><a href="https://www.kernel.org/" target="_blank" rel="noopener noreferrer">Linux</a>：Linux内核官网。</p>
<p><a href="https://elixir.bootlin.com/linux/latest/source" target="_blank" rel="noopener noreferrer">Linux源码</a>：可在线阅读Linux内核源码。</p>
<p><a href="https://buildroot.org/downloads/" target="_blank" rel="noopener noreferrer">Buildroot</a>：buildroot源码。</p>
<p><a href="https://www.debian.org/" target="_blank" rel="noopener noreferrer">Debian</a>：Debian官网。</p>
<p><a href="https://ubuntu.com/" target="_blank" rel="noopener noreferrer">Ubuntu</a>：Ubuntu官网。</p>
<p><a href="http://www.boa.org/" target="_blank" rel="noopener noreferrer">BOA官网</a>：一个单任务 web 服务器 ，可以移植到嵌入式平台。</p>
<p><a href="https://www.kancloud.cn/lichee/lpi0/317714" target="_blank" rel="noopener noreferrer">荔枝派</a>：荔枝派指南。</p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener noreferrer">清华镜像站</a>：清华大学开源软件镜像站。</p>
<p><a href="https://mirrors.ustc.edu.cn/" target="_blank" rel="noopener noreferrer">中科大镜像站</a>：中国科技大学镜像站。</p>
<p><a href="https://ftp.denx.de/pub/u-boot/" target="_blank" rel="noopener noreferrer">u-boot</a>：u-boot源码下载页面。</p>
<p><a href="https://gitee.com/morixinguan/bear-pi" target="_blank" rel="noopener noreferrer">bear-pi</a>：小熊派demo。</p>
<p><a href="http://www.zhaixue.cc/" target="_blank" rel="noopener noreferrer">宅学部落</a>：一个Linux、编程语言、内核、驱动开发学习网站。</p>
<p><a href="http://www.51hei.com/" target="_blank" rel="noopener noreferrer">单片机教程网</a>：单片机基础、设计实例、论坛。</p>
<p><a href="http://www.gnu.org/" target="_blank" rel="noopener noreferrer">GNU</a>：GNU官网。</p>
<p><a href="http://www.chinaunix.net/" target="_blank" rel="noopener noreferrer">ChinaUnix</a>：Linux/Unix相关。</p>
<p><a href="http://code.py40.com/face" target="_blank" rel="noopener noreferrer">PyQt5</a>：PyQt5教程。</p>
<p><a href="https://www.qter.org/" target="_blank" rel="noopener noreferrer">qter</a>：QT开源社区。</p>
<p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener noreferrer">git手册</a>：git学习手册。</p>
<p><a href="https://zh-google-styleguide.readthedocs.io/en/latest/#" target="_blank" rel="noopener noreferrer">开源项目风格</a>：Google 开源项目风格指南 (中文版)。</p>
<p><a href="http://www.dianzishijia.com/" target="_blank" rel="noopener noreferrer">电子世家</a>：一个电子类导航网站。</p>
<p><a href="https://www.21ic.com/" target="_blank" rel="noopener noreferrer">21ic</a>：21IC中国电子网。</p>
<p><a href="http://www.corecourse.cn/forum.php" target="_blank" rel="noopener noreferrer">芯路恒电子</a>：小梅哥博客、FPGA论坛。</p>
<p><a href="http://www.51ele.net/" target="_blank" rel="noopener noreferrer">嵌入式开发者社区</a>：创龙论坛。</p>
<p><a href="http://micropython.openioe.net/" target="_blank" rel="noopener noreferrer">micropython</a>：micropython中文网。</p>
<p><a href="http://tinylab.org/using-linux-lab-to-do-embedded-linux-development/" target="_blank" rel="noopener noreferrer">泰晓科技</a>：Linux相关。</p>
<p><a href="https://c.51diantang.com/" target="_blank" rel="noopener noreferrer">电堂科技</a>：STM32相关。</p>
<p><a href="https://cpp.hotexamples.com/zh/" target="_blank" rel="noopener noreferrer">源代码使用示例聚合器</a>： 从超过100万个开源项目搜索CPP代码示例。</p>
<p><a href="http://www.qdkingst.com/cn" target="_blank" rel="noopener noreferrer">KST-51 </a>：《手把手教你学51单片机》 。</p>
<p><a href="https://www.yuanzige.com/" target="_blank" rel="noopener noreferrer">原子哥</a>：专注电子技术教学。。</p>
<p><a href="http://www.digoboy.com/" target="_blank" rel="noopener noreferrer">digoboy</a>：地瓜派视频网。</p>
<p><a href="http://c.biancheng.net/" target="_blank" rel="noopener noreferrer">c.biancheng</a>：C语言中文网。</p>
<p><a href="https://github.com/tinyclub/open-c-book" target="_blank" rel="noopener noreferrer">open-c-book</a> ：《C语言编程透视》。</p>
<p><a href="http://code.py40.com/" target="_blank" rel="noopener noreferrer">PyQt5</a>：PyQt5在线教程。</p>
<p><a href="https://github.com/tinyclub/open-shell-book" target="_blank" rel="noopener noreferrer">open-shell-book</a>：《Shell 编程范例》 。</p>
<p><a href="https://www.zlg.cn/foxmail/weixinpdf/software_unit_test.pdf" target="_blank" rel="noopener noreferrer">software_unit_test</a>： 《软件单元测试入门与实践》。</p>
<p><a href="http://www.kerneltravel.net/" target="_blank" rel="noopener noreferrer">kerneltravel</a>：Linux内核之旅。</p>
<p><a href="http://www.wowotech.net/" target="_blank" rel="noopener noreferrer">蜗窝科技</a>：慢下来，享受技术。</p>
<p><a href="https://www.bookstack.cn/" target="_blank" rel="noopener noreferrer">bookstack</a>：书栈网。</p>
<p><a href="https://www.wireshark.org/#download" target="_blank" rel="noopener noreferrer">wireshark</a>：抓包工具下载链接。</p>
<p><a href="https://mobaxterm.mobatek.net/download.html" target="_blank" rel="noopener noreferrer">MobaXterm</a>：一个好用的终端软件。</p>
<p><a href="http://www.stduino.com/pindex.php" target="_blank" rel="noopener noreferrer">Stduino</a>： 一款面向32位处理器快速入门学习的集成开发平台 。</p>
<p><a href="https://www.easyicon.net/" target="_blank" rel="noopener noreferrer">easyicon</a>：一个免费图标下载网站。</p>
<p><a href="https://codingdict.com/" target="_blank" rel="noopener noreferrer">codingdict</a>：一个类似于菜鸟教程的编程类教程网站。</p>
<p><a href="https://codingdict.com/os/" target="_blank" rel="noopener noreferrer">codingdict开源软件</a>：codingdict网站收集的各类开源软件集合。</p>
<p><a href="https://github.com/Mzzopublic/C/tree/master/%E7%BB%8F%E5%85%B8%E7%A4%BA%E4%BE%8B" target="_blank" rel="noopener noreferrer">C经典示例</a>：一些C语言的实例。</p>
<p><a href="https://gitee.com/tboox/xmake" target="_blank" rel="noopener noreferrer">xmake</a>：轻量级跨平台C/C++构建工具。</p>
<p><a href="https://spacevim.org/cn/" target="_blank" rel="noopener noreferrer">spacevim</a>：一个模块化的 Vim IDE。</p>
<p><a href="https://www.vofa.plus/" target="_blank" rel="noopener noreferrer">vofa+</a>：一个插件驱动的高自由度上位机。</p>
<p><a href="http://www.pudn.com/" target="_blank" rel="noopener noreferrer">联合开发网</a>：356万个编程源码资料</p>
<p><a href="https://mrdoc.pro/" target="_blank" rel="noopener noreferrer">觅思文档</a>：私有云笔记、云文档和知识库系统。</p>
<p><a href="https://www.aardio.com/" target="_blank" rel="noopener noreferrer">aardio</a>：易用性极强的动态语言。</p>
<p><a href="https://github.com/cm-heclouds" target="_blank" rel="noopener noreferrer">OneNET SDK</a>：OneNET SDK仓库。</p>
<p><a href="http://docs.ros.org/en/rolling/" target="_blank" rel="noopener noreferrer">ros手册</a>：ros的官方手册。</p>
<p><a href="https://zh.opensuse.org/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6" target="_blank" rel="noopener noreferrer">gnu的开源软件</a>：gnu的开源软件</p>
<p><a href="https://github.com/alwxkxk/soft-and-hard" target="_blank" rel="noopener noreferrer">soft-and-hard</a>：这是一个以物联网项目为主方向分享web开发教程。</p>
<p><a href="https://github.com/FireflyTeam" target="_blank" rel="noopener noreferrer">FireflyTeam </a>：一个开放源代码的仓库。</p>
<p><a href="https://github.com/smilejay/python" target="_blank" rel="noopener noreferrer">python脚本</a>：一些好用的python脚本。</p>
<p><a href="https://en.cppreference.com/w/cpp/links/libs" target="_blank" rel="noopener noreferrer">C++ libraries</a>：A list of open source C++ libraries.</p>
<p><a href="https://github.com/lindenis-org" target="_blank" rel="noopener noreferrer">Lindenis</a>：An open source software for Lindenis SBC。</p>
<p><a href="https://www.a1k0n.net/2018/11/13/fast-line-following.html" target="_blank" rel="noopener noreferrer">fast-line-following</a>：一个快速寻线机器人的算法。</p>
<p><a href="https://blog.csdn.net/dcxhun3/article/details/77746550" target="_blank" rel="noopener noreferrer">深度神经网络可视化工具</a>：深度神经网络可视化工具。</p>
<p><a href="https://github.com/nhivp/Awesome-Embedded" target="_blank" rel="noopener noreferrer">Awesome-Embedded</a> ：汇聚了各种嵌入式相关的资源。</p>
<p><a href="https://github.com/armink/FreeModbus_Slave-Master-RTT-STM32" target="_blank" rel="noopener noreferrer">FreeModbus</a> : FreeModbus是一款开源的Modbus协议栈，但是只有从机开源。</p>
<p>更多资源敬请期待......</p>
<h2> 6、一些芯片原厂代码仓库</h2>
<p><a href="https://github.com/STMicroelectronics" target="_blank" rel="noopener noreferrer">STMicroelectronics</a>：意法半导体（ST）。</p>
<p><a href="https://github.com/ti-simplelink" target="_blank" rel="noopener noreferrer">TI</a>：德州仪器（TI）。</p>
<p><a href="https://github.com/NXP" target="_blank" rel="noopener noreferrer">NXP</a>：恩智浦（NXP）。</p>
<p><a href="https://github.com/Freescale" target="_blank" rel="noopener noreferrer">Freescale</a>：飞思卡尔半导体（Freescale）。</p>
<p><a href="https://github.com/hisilicon" target="_blank" rel="noopener noreferrer">hisilicon</a>：海思。</p>
<p><a href="https://github.com/rockchip-linux" target="_blank" rel="noopener noreferrer">rockchip</a>：瑞芯微。</p>
<p><a href="https://github.com/Samsung" target="_blank" rel="noopener noreferrer">Samsung</a>：三星。</p>
<p><a href="https://github.com/Infineon" target="_blank" rel="noopener noreferrer">Infineon</a>：英飞凌。</p>
<p><a href="https://github.com/analogdevicesinc" target="_blank" rel="noopener noreferrer">analogdevicesinc</a>：亚德诺半导体（ADI）。</p>
<p><a href="https://github.com/MicrochipTech" target="_blank" rel="noopener noreferrer">MicrochipTech</a>：微芯半导体（Microchip ）。</p>
<p><a href="https://github.com/NordicSemiconductor" target="_blank" rel="noopener noreferrer">NordicSemiconductor</a>：北欧集成电路（Nordic）。</p>
<p><a href="https://github.com/cypress-io" target="_blank" rel="noopener noreferrer">cypress-io</a>：赛普拉斯半导体（Cypress）。</p>
<p><a href="http://www.gd32mcu.com/cn/download/7" target="_blank" rel="noopener noreferrer">GD32</a>：易兆创新(GD)。</p>
<p><a href="http://pan.baidu.com/s/1nuifedz" target="_blank" rel="noopener noreferrer">GD32网盘</a>：：易兆创新(GD)网盘资料。</p>
<p>更多资源敬请期待......</p>
<h2> 7、物联网、智能家居</h2>
<p><a href="https://github.com/domoticz/domoticz" target="_blank" rel="noopener noreferrer"> Domoticz </a>：一个开源的智能家居系统 。</p>
<p><a href="https://www.kaaproject.org/" target="_blank" rel="noopener noreferrer">Kaa IoT Platform</a>：功能丰富的开放和高效的物联网云平台。</p>
<p><a href="https://github.com/RT-Thread/IoT_Board" target="_blank" rel="noopener noreferrer"> RT-Thread IoT SDK </a>：基于RT-Thread IOT开发板的各类例程。</p>
<p><a href="https://www.scaugreen.cn/posts/44755/" target="_blank" rel="noopener noreferrer">从零打造物联网</a>：一份适合嵌入式开发人员学习的web开发教程。</p>
<p>更多资源敬请期待......</p>
<h2> 8、机器人相关 / 定位 / 视觉</h2>
<p><a href="https://gitee.com/cv_team/uestc-careye" target="_blank" rel="noopener noreferrer">RoboCar</a>：机器人自动寻线、避障、建图、导航、遥控版本/车载电脑版本路面分析，及交通路况识别的车辆辅助驾驶系统</p>
<p><a href="http://wiki.ros.org/cn/ROS/Tutorials" target="_blank" rel="noopener noreferrer">ROS教程</a>：机器人操作系统</p>
<p><a href="https://www.slamtec.com/" target="_blank" rel="noopener noreferrer">slam</a>：思岚科技。</p>
<h2> 9、推荐博客 / 博文</h2>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247508249&amp;idx=1&amp;sn=d9ec13b5ffd8696c33d16f852129b4c7&amp;chksm=fe0ecfdec97946c830fae7314a4ff1f83ffd949d8aca89036dbee3c285885e280870b07840e9&amp;token=1729383283&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 11 期 aardio</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247507990&amp;idx=1&amp;sn=c521f8761a659392c88943488987129e&amp;chksm=fe0eced1c97947c7ffc3fab6de185a5059fa790f892895656d3236affd41baa061e606d09e70&amp;token=1729383283&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 10 期 inih</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247507711&amp;idx=1&amp;sn=ff20087065e5ff65ad42437adb41ee3e&amp;chksm=fe0eb038c979392eb6fc6c50bf2b2b3fffce3e9c689a1f702dcb14c7045b25786b60960373d3&amp;token=1729383283&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 9 期 nanopb</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247507328&amp;idx=1&amp;sn=be02dff353abab76e6d277a1d8fe9ec0&amp;chksm=fe0eb347c9793a51e84365642d65af23720e27b855dc257ebbecb94d1a331b54c4e0eedd3285&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 8 期  AMetal</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247507038&amp;idx=1&amp;sn=9fa92d6e0ceeb207e732fdd37943d581&amp;chksm=fe0eb299c9793b8f2c698ae579eb9d8d80f7be4b852ea805c1dfe519fabbe6de363f25aa150f&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 7 期 zlog</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247506418&amp;idx=1&amp;sn=7d3002a4d2821dfee59eba97caaa6aae&amp;chksm=fe0eb735c9793e2313e6418f48ff96ecd887e934f7c09178822475adf505241193a6cffe19ab&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 6 期 FlexibleButton</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247506144&amp;idx=1&amp;sn=8d6ca3a50341d6147eaba41ab0da8eb6&amp;chksm=fe0eb627c9793f31ee01411d6b1a6cd7331610d24aefd6c697e540ea26262b91fd3c00e619c8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 5 期 smartlink</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247505918&amp;idx=1&amp;sn=8782c2fed223af07f77ff11c1e02d4a9&amp;chksm=fe0eb939c979302fc69171a6786bfed007673d689a7ff9836dc1702f3585b4d796b0bb5bb19d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 4 期 cola_os</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247505803&amp;idx=1&amp;sn=78714f6c35c3df080d4a646cd3f9e9ef&amp;chksm=fe0eb94cc979305aec86d41c9d532b83d49825f543d340d846e856737ee8927b9fab3c299033&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 3 期 sys/queue.h</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247505561&amp;idx=1&amp;sn=44e1ba8b99a2c312212e079c7f533208&amp;chksm=fe0eb85ec979314852a2e0e6ec335287c6fe597e50428005b3d6b6f57cd199c97139863eb9ee&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 2 期 llgui</a></p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzU5MzcyMjI4MA==&amp;mid=2247505251&amp;idx=1&amp;sn=f3ca02a6538af599e7705af5133ba40d&amp;chksm=fe0ebba4c97932b2530651671bcde2d7b1e76b25c37e58fab0f4010b0949a2764303cfcfd289&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">嵌入式大杂烩周记 | 第 1 期 gear-lib</a></p>
<p><a href="https://blog.csdn.net/water_cow/article/details/7215308?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control" target="_blank" rel="noopener noreferrer">博文——Tslib移植与分析</a></p>
<p><a href="https://ychy.me/" target="_blank" rel="noopener noreferrer">博主——ychy</a></p>
<p>下面计算机资源为网友 <strong><code>dianjixz</code></strong> 贡献，感谢这位朋友。</p>
<h1> 计算机相关资源------持续更新中</h1>
<h2> 1、 标准库</h2>
<p>C++标准库，包括了STL容器，算法和函数等。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/C%2B%2B_Standard_Library" target="_blank" rel="noopener noreferrer">C++ Standard Library</a>：是一系列类和函数的集合，使用核心语言编写，也是C++ISO自身标准的一部分。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Standard_Template_Library" target="_blank" rel="noopener noreferrer">Standard Template Library</a>：标准模板库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/C_POSIX_library" target="_blank" rel="noopener noreferrer">C POSIX library</a> ： POSIX系统的C标准库规范</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cplusplus" target="_blank" rel="noopener noreferrer">ISO C++ Standards Committee</a> ：C++标准委员会</p>
<h2> 2、 框架</h2>
<p>C++通用框架和库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//stdcxx.apache.org/" target="_blank" rel="noopener noreferrer">Apache C++ Standard Library</a>：是一系列算法，容器，迭代器和其他基本组件的集合</p>
<p><a href="https://link.zhihu.com/?target=http%3A//stlab.adobe.com/" target="_blank" rel="noopener noreferrer">ASL</a> ：Adobe源代码库提供了同行的评审和可移植的C++源代码库。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/boostorg" target="_blank" rel="noopener noreferrer">Boost</a> ：大量通用C++库的集合。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/bloomberg/bde" target="_blank" rel="noopener noreferrer">BDE</a> ：来自于彭博资讯实验室的开发环境。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//libcinder.org/" target="_blank" rel="noopener noreferrer">Cinder</a>：提供专业品质创造性编码的开源开发社区。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//ryan.gulix.cl/fossil.cgi/cxxomfort/" target="_blank" rel="noopener noreferrer">Cxxomfort</a>：轻量级的，只包含头文件的库，将C++ 11的一些新特性移植到C++03中。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//dlib.net/" target="_blank" rel="noopener noreferrer">Dlib</a>：使用契约式编程和现代C++科技设计的通用的跨平台的C++库。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/paulhodge/EASTL" target="_blank" rel="noopener noreferrer">EASTL</a> ：EA-STL公共部分</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/sumeetchhetri/ffead-cpp" target="_blank" rel="noopener noreferrer">ffead-cpp</a> ：企业应用程序开发框架</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/folly" target="_blank" rel="noopener noreferrer">Folly</a>：由Facebook开发和使用的开源C++库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/julianstorer/JUCE" target="_blank" rel="noopener noreferrer">JUCE</a> ：包罗万象的C++类库，用于开发跨平台软件</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/libphenom" target="_blank" rel="noopener noreferrer">libPhenom</a>：用于构建高性能和高度可扩展性系统的事件框架。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/sourcey/libsourcey" target="_blank" rel="noopener noreferrer">LibSourcey</a> ：用于实时的视频流和高性能网络应用程序的C++11 evented IO</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/koanlogic/libu" target="_blank" rel="noopener noreferrer">LibU</a> ： C语言写的多平台工具库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//loki-lib.sourceforge.net/" target="_blank" rel="noopener noreferrer">Loki</a> ：C++库的设计，包括常见的<a href="https://link.zhihu.com/?target=http%3A//www.codeceo.com/article/category/develop/design-patterns" target="_blank" rel="noopener noreferrer">设计模式</a>和习语的实现。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/mili/" target="_blank" rel="noopener noreferrer">MiLi</a> ：只含头文件的小型C++库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.openframeworks.cc/" target="_blank" rel="noopener noreferrer">openFrameworks</a> ：开发C++工具包，用于创意性编码。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//qt-project.org/" target="_blank" rel="noopener noreferrer">Qt</a> ：跨平台的应用程序和用户界面框架</p>
<p><a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/reason/" target="_blank" rel="noopener noreferrer">Reason</a> ：跨平台的框架，使开发者能够更容易地使用Java，.Net和Python，同时也满足了他们对C++性能和优势的需求。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//root.cern.ch/" target="_blank" rel="noopener noreferrer">ROOT</a> ：具备所有功能的一系列面向对象的框架，能够非常高效地处理和分析大量的数据，为欧洲原子能研究机构所用。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.stlport.org/" target="_blank" rel="noopener noreferrer">STLport</a>：是STL具有代表性的版本</p>
<p><a href="https://link.zhihu.com/?target=http%3A//stxxl.sourceforge.net/" target="_blank" rel="noopener noreferrer">STXXL</a>：用于额外的大型数据集的标准模板库。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.ultimatepp.org/" target="_blank" rel="noopener noreferrer">Ultimate++</a> ：C++跨平台快速应用程序开发框架</p>
<p><a href="https://link.zhihu.com/?target=http%3A//sourceforge.net/projects/wtl/" target="_blank" rel="noopener noreferrer">Windows Template Library</a>：用于开发Windows应用程序和UI组件的C++库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jll63/yomm11" target="_blank" rel="noopener noreferrer">Yomm11</a> ：C++11的开放multi-methods.</p>
<h2> 3、 人工智能</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/aigamedev/btsk" target="_blank" rel="noopener noreferrer">btsk</a> ：游戏行为树启动器工具</p>
<p><a href="https://link.zhihu.com/?target=http%3A//eodev.sourceforge.net/" target="_blank" rel="noopener noreferrer">Evolving Objects</a>：基于模板的，ANSI C++演化计算库，能够帮助你非常快速地编写出自己的随机优化算法。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/andrometa/neu" target="_blank" rel="noopener noreferrer">Neu</a>：C++11框架，编程语言集，用于创建人工智能应用程序的多用途软件系统。</p>
<h2> 4、 异步事件循环</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//think-async.com/" target="_blank" rel="noopener noreferrer">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//libev.schmorp.de/" target="_blank" rel="noopener noreferrer">libev</a> ：功能齐全，高性能的时间循环，轻微地仿效libevent，但是不再像libevent一样有局限性，也修复了它的一些bug。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//libevent.org/" target="_blank" rel="noopener noreferrer">libevent</a> ：事件通知库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/joyent/libuv" target="_blank" rel="noopener noreferrer">libuv</a> ：跨平台异步I/O。</p>
<h2> 5、音频</h2>
<p>音频，声音，音乐，数字化音乐库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.fmod.org/" target="_blank" rel="noopener noreferrer">FMOD</a> ：易于使用的跨平台的音频引擎和音频内容的游戏创作工具。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/micknoise/Maximilian" target="_blank" rel="noopener noreferrer">Maximilian</a> ：C++音频和音乐数字信号处理库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.openal.org/" target="_blank" rel="noopener noreferrer">OpenAL</a> ：开源音频库—跨平台的音频API</p>
<p><a href="https://link.zhihu.com/?target=http%3A//opus-codec.org/" target="_blank" rel="noopener noreferrer">Opus</a>：一个完全开放的，免版税的，高度通用的音频编解码器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.speex.org/" target="_blank" rel="noopener noreferrer">Speex</a>：免费编解码器，为Opus所废弃</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/TonicAudio/Tonic" target="_blank" rel="noopener noreferrer">Tonic</a>： C++易用和高效的音频合成</p>
<p><a href="https://link.zhihu.com/?target=http%3A//xiph.org/vorbis/" target="_blank" rel="noopener noreferrer">Vorbis</a>： Ogg Vorbis是一种完全开放的，非专有的，免版税的通用压缩音频格式。</p>
<h2> 6、 生态学</h2>
<p>生物信息，基因组学和生物技术</p>
<p><a href="https://link.zhihu.com/?target=http%3A//molpopgen.github.io/libsequence/" target="_blank" rel="noopener noreferrer">libsequence</a>：用于表示和分析群体遗传学数据的C++库。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.seqan.de/" target="_blank" rel="noopener noreferrer">SeqAn</a>：专注于生物数据序列分析的算法和数据结构。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ekg/vcflib" target="_blank" rel="noopener noreferrer">Vcflib</a> ：用于解析和处理VCF文件的C++库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jewmanchue/wham" target="_blank" rel="noopener noreferrer">Wham</a>：直接把联想测试应用到BAM文件的基因结构变异。</p>
<h2> 7、 压缩</h2>
<p>压缩和归档库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.bzip.org/" target="_blank" rel="noopener noreferrer">bzip2</a>：一个完全免费，免费专利和高质量的数据压缩</p>
<p><a href="https://link.zhihu.com/?target=https%3A//bitbucket.org/attila_afra/doboz/overview" target="_blank" rel="noopener noreferrer">doboz</a>：能够快速解压缩的压缩库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//icculus.org/physfs/" target="_blank" rel="noopener noreferrer">PhysicsFS</a>：对各种归档提供抽象访问的库，主要用于视频游戏，设计灵感部分来自于Quake3的文件子系统。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//projects.kde.org/projects/frameworks/karchive" target="_blank" rel="noopener noreferrer">KArchive</a>：用于创建，读写和操作文件档案（例如zip和 tar）的库，它通过QIODevice的一系列子类，使用gzip格式，提供了透明的压缩和解压缩的数据。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/lz4/" target="_blank" rel="noopener noreferrer">LZ4</a> ：非常快速的压缩算法</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/lzham/" target="_blank" rel="noopener noreferrer">LZHAM</a> ：无损压缩数据库，压缩比率跟LZMA接近，但是解压缩速度却要快得多。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.7-zip.org/sdk.html" target="_blank" rel="noopener noreferrer">LZMA</a> ：7z格式默认和通用的压缩方法。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.matcode.com/lzmat.htm" target="_blank" rel="noopener noreferrer">LZMAT</a> ：及其快速的实时无损数据压缩库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/miniz/" target="_blank" rel="noopener noreferrer">miniz</a>：单一的C源文件，紧缩/膨胀压缩库，使用zlib兼容API，ZIP归档读写，PNG写方式。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/nmoinvaz/minizip" target="_blank" rel="noopener noreferrer">Minizip</a>：Zlib最新bug修复，支持PKWARE磁盘跨越，AES加密和IO缓冲。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/snappy/" target="_blank" rel="noopener noreferrer">Snappy</a> ：快速压缩和解压缩</p>
<p><a href="https://link.zhihu.com/?target=http%3A//zlib.net/" target="_blank" rel="noopener noreferrer">ZLib</a> ：非常紧凑的数据流压缩库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//zziplib.sourceforge.net/" target="_blank" rel="noopener noreferrer">ZZIPlib</a>：提供ZIP归档的读权限。</p>
<h2> 8、并发性</h2>
<p>并发执行和多线程</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/kylelutz/compute" target="_blank" rel="noopener noreferrer">Boost.Compute</a> ：用于OpenCL的C++GPU计算库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/HSA-Libraries/Bolt" target="_blank" rel="noopener noreferrer">Bolt</a> ：针对GPU进行优化的C++模板库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/schlangster/cpp.react" target="_blank" rel="noopener noreferrer">C++React</a> ：用于C++11的反应性编程库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.threadingbuildingblocks.org/" target="_blank" rel="noopener noreferrer">Intel TBB</a> ：Intel线程构件块</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/libclsph/libclsph" target="_blank" rel="noopener noreferrer">Libclsph</a>：基于OpenCL的GPU加速SPH流体仿真库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.khronos.org/opencl/" target="_blank" rel="noopener noreferrer">OpenCL</a> ：并行编程的异构系统的开放标准</p>
<p><a href="https://link.zhihu.com/?target=http%3A//openmp.org/" target="_blank" rel="noopener noreferrer">OpenMP</a>：OpenMP API</p>
<p><a href="https://link.zhihu.com/?target=http%3A//thrust.github.io/" target="_blank" rel="noopener noreferrer">Thrust</a> ：类似于C++标准模板库的并行算法库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/STEllAR-GROUP/hpx/" target="_blank" rel="noopener noreferrer">HPX</a> ：用于任何规模的并行和分布式应用程序的通用C++运行时系统</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ddemidov/vexcl" target="_blank" rel="noopener noreferrer">VexCL</a> ：用于OpenCL/CUDA 的C++向量表达式模板库。</p>
<h2> 9、 容器</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/cpp-btree/" target="_blank" rel="noopener noreferrer">C++ B-tree</a> ：基于B树数据结构，实现命令内存容器的模板库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/goossaert/hashmap" target="_blank" rel="noopener noreferrer">Hashmaps</a>： C++中开放寻址哈希表算法的实现</p>
<h2> 10、 密码学</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//bcrypt.sourceforge.net/" target="_blank" rel="noopener noreferrer">Bcrypt</a> ：一个跨平台的文件加密工具，加密文件可以移植到所有可支持的操作系统和处理器中。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/fffaraz/awesome-cpp/blob/master" target="_blank" rel="noopener noreferrer">BeeCrypt</a>：</p>
<p><a href="https://link.zhihu.com/?target=http%3A//botan.randombit.net/" target="_blank" rel="noopener noreferrer">Botan</a>： C++加密库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cryptopp.com/" target="_blank" rel="noopener noreferrer">Crypto++</a>：一个有关加密方案的免费的C++库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.gnupg.org/" target="_blank" rel="noopener noreferrer">GnuPG</a>： OpenPGP标准的完整实现</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gnutls.org/" target="_blank" rel="noopener noreferrer">GnuTLS</a> ：实现了SSL，TLS和DTLS协议的安全通信库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gnu.org/software/libgcrypt/" target="_blank" rel="noopener noreferrer">Libgcrypt</a></p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/fffaraz/awesome-cpp/blob/master" target="_blank" rel="noopener noreferrer">libmcrypt</a></p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.libressl.org/" target="_blank" rel="noopener noreferrer">LibreSSL</a>：免费的SSL/TLS协议，属于2014 OpenSSL的一个分支</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/libtom/libtomcrypt" target="_blank" rel="noopener noreferrer">LibTomCrypt</a>：一个非常全面的，模块化的，可移植的加密工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jedisct1/libsodium" target="_blank" rel="noopener noreferrer">libsodium</a>：基于NaCI的加密库，固执己见，容易使用</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.lysator.liu.se/~nisse/nettle/" target="_blank" rel="noopener noreferrer">Nettle</a> 底层的加密库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.openssl.org/" target="_blank" rel="noopener noreferrer">OpenSSL</a> ： 一个强大的，商用的，功能齐全的，开放源代码的加密库。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/kokke/tiny-AES128-C" target="_blank" rel="noopener noreferrer">Tiny AES128 in C</a> ：用C实现的一个小巧，可移植的实现了AES128ESB的加密算法</p>
<h2> 11、 数据库</h2>
<p>数据库，SQL服务器，ODBC驱动程序和工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/paulftw/hiberlite" target="_blank" rel="noopener noreferrer">hiberlite</a> ：用于Sqlite3的C++对象关系映射</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/redis/hiredis" target="_blank" rel="noopener noreferrer">Hiredis</a>： 用于Redis数据库的很简单的C客户端库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/google/leveldb" target="_blank" rel="noopener noreferrer">LevelDB</a>： 快速键值存储库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//symas.com/mdb/" target="_blank" rel="noopener noreferrer">LMDB</a>：符合数据库四大基本元素的嵌入键值存储</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.tangentsoft.net/mysql%2B%2B/" target="_blank" rel="noopener noreferrer">MySQL++</a>：封装了MySql的C API的C++ 包装器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/rocksdb" target="_blank" rel="noopener noreferrer">RocksDB</a>：来自Facebook的嵌入键值的快速存储</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.sqlite.org/" target="_blank" rel="noopener noreferrer">SQLite</a>：一个完全嵌入式的，功能齐全的关系数据库，只有几百KB，可以正确包含到你的项目中。</p>
<h2> 12、 调试</h2>
<p>调试库， 内存和资源泄露检测，单元测试</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.boost.org/doc/libs/master/libs/test/doc/html/index.html" target="_blank" rel="noopener noreferrer">Boost.Test</a>：Boost测试库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/philsquared/Catch" target="_blank" rel="noopener noreferrer">Catch</a>：一个很时尚的，C++原生的框架，只包含头文件，用于单元测试，测试驱动开发和行为驱动开发。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.freedesktop.org/wiki/Software/cppunit/" target="_blank" rel="noopener noreferrer">CppUnit</a>：由JUnit移植过来的C++测试框架</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cmake.org/cmake/help/v2.8.8/ctest.html" target="_blank" rel="noopener noreferrer">CTest</a>：CMake测试驱动程序</p>
<p><a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/googletest/" target="_blank" rel="noopener noreferrer">googletest</a>：谷歌C++测试框架</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/deplinenoise/ig-debugheap" target="_blank" rel="noopener noreferrer">ig-debugheap</a>：用于跟踪内存错误的多平台调试堆</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/zorgnax/libtap" target="_blank" rel="noopener noreferrer">libtap</a>：用C语言编写测试</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.almostinfinite.com/memtrack.html" target="_blank" rel="noopener noreferrer">MemTrack</a> —用于C++跟踪内存分配</p>
<p><a href="https://link.zhihu.com/?target=https%3A//bitbucket.org/jonasmeyer/microprofile/overview" target="_blank" rel="noopener noreferrer">microprofile</a>- 跨平台的网络试图分析器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.jera.com/techinfo/jtns/jtn002.html" target="_blank" rel="noopener noreferrer">minUnit</a> ：使用C写的迷你单元测试框架，只使用了两个宏</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Celtoys/Remotery" target="_blank" rel="noopener noreferrer">Remotery</a>：用于web视图的单一C文件分析器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//unittest-cpp.sourceforge.net/" target="_blank" rel="noopener noreferrer">UnitTest++</a>：轻量级的C++单元测试框架</p>
<h2> 13、 游戏引擎</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cocos2d-x.org/" target="_blank" rel="noopener noreferrer">Cocos2d-x</a> ：一个跨平台框架，用于构建2D游戏，互动图书，演示和其他图形应用程序。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//gritengine.com/" target="_blank" rel="noopener noreferrer">Grit</a> ：社区项目，用于构建一个免费的游戏引擎，实现开放的世界3D游戏。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//irrlicht.sourceforge.net/" target="_blank" rel="noopener noreferrer">Irrlicht</a> ：C++语言编写的开源高性能的实时#D引擎</p>
<p><a href="https://link.zhihu.com/?target=http%3A//polycode.org/" target="_blank" rel="noopener noreferrer">Polycode</a>：C++实现的用于创建游戏的开源框架（与Lua绑定）。</p>
<h2> 14、 图形用户界面</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//cegui.org.uk/" target="_blank" rel="noopener noreferrer">CEGUI</a> ： 很灵活的跨平台GUI库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.fltk.org/index.php" target="_blank" rel="noopener noreferrer">FLTK</a> ：快速，轻量级的跨平台的C++GUI工具包。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gtk.org/" target="_blank" rel="noopener noreferrer">GTK+</a>： 用于创建图形用户界面的跨平台工具包</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gtkmm.org/en/" target="_blank" rel="noopener noreferrer">gtkmm</a> ：用于受欢迎的GUI库GTK+的官方C++接口。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ocornut/imgui" target="_blank" rel="noopener noreferrer">imgui</a>：拥有最小依赖关系的立即模式图形用户界面</p>
<p><a href="https://link.zhihu.com/?target=http%3A//librocket.com/" target="_blank" rel="noopener noreferrer">libRocket</a> ：<a href="https://link.zhihu.com/?target=http%3A//librocket.com/" target="_blank" rel="noopener noreferrer">libRocket</a> 是一个C++ HTML/CSS 游戏接口中间件</p>
<p><a href="https://link.zhihu.com/?target=http%3A//mygui.info/" target="_blank" rel="noopener noreferrer">MyGUI</a> ：快速，灵活，简单的GUI</p>
<p><a href="https://link.zhihu.com/?target=http%3A//invisible-island.net/ncurses/" target="_blank" rel="noopener noreferrer">Ncurses</a>：终端用户界面</p>
<p><a href="https://link.zhihu.com/?target=http%3A//qcustomplot.com/" target="_blank" rel="noopener noreferrer">QCustomPlot</a> ：没有更多依赖关系的Qt绘图控件</p>
<p><a href="https://link.zhihu.com/?target=http%3A//qwt.sourceforge.net/" target="_blank" rel="noopener noreferrer">Qwt</a> ：用户与技术应用的Qt 控件</p>
<p><a href="https://link.zhihu.com/?target=http%3A//qwtplot3d.sourceforge.net/" target="_blank" rel="noopener noreferrer">QwtPlot3D</a> ：功能丰富的基于Qt/OpenGL的C++编程库，本质上提供了一群3D控件</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Twolewis/OtterUI" target="_blank" rel="noopener noreferrer">OtterUI</a> ：<a href="https://link.zhihu.com/?target=https%3A//github.com/Twolewis/OtterUI" target="_blank" rel="noopener noreferrer">OtterUI</a> 是用于嵌入式系统和互动娱乐软件的用户界面开发解决方案</p>
<p><a href="https://link.zhihu.com/?target=http%3A//pdcurses.sourceforge.net/" target="_blank" rel="noopener noreferrer">PDCurses</a> 包含源代码和预编译库的公共图形函数库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//wxwidgets.org/" target="_blank" rel="noopener noreferrer">wxWidgets</a> C++库，允许开发人员使用一个代码库可以为widows， Mac OS X，Linux和其他平台创建应用程序</p>
<h2> 15、 图形</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/bkaradzic/bgfx" target="_blank" rel="noopener noreferrer">bgfx</a>：跨平台的渲染库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cairographics.org/" target="_blank" rel="noopener noreferrer">Cairo</a>：支持多种输出设备的2D图形库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/horde3d/Horde3D" target="_blank" rel="noopener noreferrer">Horde3D</a> 一个小型的3D渲染和动画引擎</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/mosra/magnum" target="_blank" rel="noopener noreferrer">magnum</a> C++11和OpenGL 2D/3D 图形引擎</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.ogre3d.org/" target="_blank" rel="noopener noreferrer">Ogre 3D</a> 用C++编写的一个面向场景，实时，灵活的3D渲染引擎（并非游戏引擎）</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.openscenegraph.org/" target="_blank" rel="noopener noreferrer">OpenSceneGraph</a> 具有高性能的开源3D图形工具包</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.panda3d.org/" target="_blank" rel="noopener noreferrer">Panda3D</a> 用于3D渲染和游戏开发的框架，用Python和C++编写。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/google/skia" target="_blank" rel="noopener noreferrer">Skia</a> 用于绘制文字，图形和图像的完整的2D图形库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/urho3d/Urho3D" target="_blank" rel="noopener noreferrer">urho3d</a> 跨平台的渲染和游戏引擎。</p>
<h2> 16、 图像处理</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.boost.org/doc/libs/1_56_0/libs/gil/doc/index.html" target="_blank" rel="noopener noreferrer">Boost.GIL</a>：通用图像库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//cimg.sourceforge.net/" target="_blank" rel="noopener noreferrer">CImg</a> ：用于图像处理的小型开源C++工具包</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.xdp.it/cximage.htm" target="_blank" rel="noopener noreferrer">CxImage</a> ：用于加载，保存，显示和转换的图像处理和转换库，可以处理的图片格式包括 BMP, JPEG, GIF, PNG, TIFF, MNG, ICO, PCX, TGA, WMF, WBMP, JBG, J2K。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//freeimage.sourceforge.net/" target="_blank" rel="noopener noreferrer">FreeImage</a> ：开源库，支持现在多媒体应用所需的通用图片格式和其他格式。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//gdcm.sourceforge.net/wiki/index.php/Main_Page" target="_blank" rel="noopener noreferrer">GDCM</a>：Grassroots DICOM 库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.itk.org/" target="_blank" rel="noopener noreferrer">ITK</a>：跨平台的开源图像分析系统</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.imagemagick.org/script/api.php" target="_blank" rel="noopener noreferrer">Magick++</a>：Image<a href="https://link.zhihu.com/?target=http%3A//www.codeceo.com/article/magic-javascript-ui.html" target="_blank" rel="noopener noreferrer">Magic</a>k程序的C++接口</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.imagemagick.org/script/api.php" target="_blank" rel="noopener noreferrer">MagickWnd</a>：ImageMagick程序的C++接口</p>
<p><a href="https://link.zhihu.com/?target=http%3A//opencv.org/" target="_blank" rel="noopener noreferrer">OpenCV</a> ： 开源计算机视觉类库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/tesseract-ocr/" target="_blank" rel="noopener noreferrer">tesseract-ocr</a>：OCR引擎</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ukoethe/vigra" target="_blank" rel="noopener noreferrer">VIGRA</a> ：用于图像分析通用C++计算机视觉库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.vtk.org/" target="_blank" rel="noopener noreferrer">VTK</a> ：用于3D计算机图形学，图像处理和可视化的开源免费软件系统。</p>
<h2> 17、 国际化</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gnu.org/software/gettext/" target="_blank" rel="noopener noreferrer">gettext</a> ：GNU `gettext’</p>
<p><a href="https://link.zhihu.com/?target=http%3A//site.icu-project.org/" target="_blank" rel="noopener noreferrer">IBM ICU</a>：提供Unicode 和全球化支持的C、C++ 和Java库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gnu.org/software/libiconv/" target="_blank" rel="noopener noreferrer">libiconv</a> ：用于不同字符编码之间的编码转换库</p>
<h2> 18、 Jason</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/frozen" target="_blank" rel="noopener noreferrer">frozen</a> ： C/C++的Jason解析生成器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/akheron/jansson" target="_blank" rel="noopener noreferrer">Jansson</a> ：进行编解码和处理Jason数据的C语言库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/chrismanning/jbson" target="_blank" rel="noopener noreferrer">jbson</a> ：C++14中构建和迭代BSON data,和Json 文档的库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jeaye/jeayeson" target="_blank" rel="noopener noreferrer">JeayeSON</a>：非常健全的C++ JSON库，只包含头文件</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/hjiang/jsonxx" target="_blank" rel="noopener noreferrer">JSON++</a> ： C++ JSON 解析器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/udp/json-parser" target="_blank" rel="noopener noreferrer">json-parser</a>：用可移植的ANSI C编写的JSON解析器，占用内存非常少</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/dropbox/json11" target="_blank" rel="noopener noreferrer">json11</a> ：一个迷你的C++11 JSON库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/amir-s/jute" target="_blank" rel="noopener noreferrer">jute</a> ：非常简单的C++ JSON解析器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/vincenthz/libjson" target="_blank" rel="noopener noreferrer">ibjson</a>：C语言中的JSON解析和打印库，很容易和任何模型集成。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//sourceforge.net/projects/libjson/" target="_blank" rel="noopener noreferrer">libjson</a>：轻量级的JSON库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/kazuho/picojson" target="_blank" rel="noopener noreferrer">PicoJSON</a>：C++中JSON解析序列化，只包含头文件</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/gaudecker/qt-json" target="_blank" rel="noopener noreferrer">qt-json</a> ：用于JSON数据和 QVariant层次间的相互解析的简单类</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/flavio/qjson" target="_blank" rel="noopener noreferrer">QJson</a>：将JSON数据映射到QVariant对象的基于Qt的库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/miloyip/rapidjson" target="_blank" rel="noopener noreferrer">RapidJSON</a>： 用于C++的快速JSON 解析生成器，包含SAX和DOM两种风格的API</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/lloyd/yajl" target="_blank" rel="noopener noreferrer">YAJL</a> ：C语言中快速流JSON解析库</p>
<h2> 19、 日志</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.boost.org/doc/libs/1_56_0/libs/log/doc/html/index.html" target="_blank" rel="noopener noreferrer">Boost.Log</a> ：设计非常模块化，并且具有扩展性</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/easylogging/easyloggingpp" target="_blank" rel="noopener noreferrer">easyloggingpp</a>：C++日志库，只包含单一的头文件。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//log4cpp.sourceforge.net/" target="_blank" rel="noopener noreferrer">Log4cpp</a> ：一系列C++类库，灵活添加日志到文件，系统日志，IDSA和其他地方。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.templog.org/" target="_blank" rel="noopener noreferrer">templog</a>：轻量级C++库，可以添加日志到你的C++应用程序中</p>
<h2> 20、 机器学习</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/BVLC/caffe" target="_blank" rel="noopener noreferrer">Caffe</a> ：快速的神经网络框架</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/liuliu/ccv" target="_blank" rel="noopener noreferrer">CCV</a> ：以C语言为核心的现代计算机视觉库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.mlpack.org/" target="_blank" rel="noopener noreferrer">mlpack</a> ：可扩展的C++机器学习库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Itseez/opencv" target="_blank" rel="noopener noreferrer">OpenCV</a>：开源计算机视觉库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/GHamrouni/Recommender" target="_blank" rel="noopener noreferrer">Recommender</a>：使用协同过滤进行产品推荐/建议的C语言库。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/shogun-toolbox/shogun" target="_blank" rel="noopener noreferrer">SHOGUN</a>：Shogun 机器学习工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/sofia-ml/" target="_blank" rel="noopener noreferrer">sofia-ml</a> ：用于机器学习的快速增量算法套件</p>
<h2> 21、 数学</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//arma.sourceforge.net/" target="_blank" rel="noopener noreferrer">Armadillo</a> ：高质量的C++线性代数库，速度和易用性做到了很好的平衡。语法和MatlAB很相似</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/blaze-lib/" target="_blank" rel="noopener noreferrer">blaze</a>：高性能的C++数学库，用于密集和稀疏算法。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//ceres-solver.org/" target="_blank" rel="noopener noreferrer">ceres-solver</a> ：来自谷歌的C++库，用于建模和解决大型复杂非线性最小平方问题。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cgal.org/" target="_blank" rel="noopener noreferrer">CGal</a>： 高效，可靠的集合算法集合</p>
<p><a href="https://link.zhihu.com/?target=http%3A//cmldev.net/" target="_blank" rel="noopener noreferrer">cml</a> ：用于游戏和图形的免费C++数学库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//eigen.tuxfamily.org/" target="_blank" rel="noopener noreferrer">Eigen</a> ：高级C++模板头文件库，包括线性代数，矩阵，向量操作，数值解决和其他相关的算法。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//ggt.sourceforge.net/" target="_blank" rel="noopener noreferrer">GMTL</a>：数学图形模板库是一组广泛实现基本图形的工具。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//gmplib.org/" target="_blank" rel="noopener noreferrer">GMP</a>：用于个高精度计算的C/C++库，处理有符号整数，有理数和<a href="https://link.zhihu.com/?target=http%3A//www.codeceo.com/article/float-number.html" target="_blank" rel="noopener noreferrer">浮点数</a>。</p>
<h2> 22、 多媒体</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//gstreamer.freedesktop.org/" target="_blank" rel="noopener noreferrer">GStreamer</a> ：构建媒体处理组件图形的库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.live555.com/liveMedia/" target="_blank" rel="noopener noreferrer">LIVE555 Streaming Media</a> ：使用开放标准协议(RTP/RTCP, RTSP, SIP) 的多媒体流库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//wiki.videolan.org/LibVLC" target="_blank" rel="noopener noreferrer">libVLC</a> ：libVLC (VLC SDK)媒体框架</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/wang-bin/QtAV" target="_blank" rel="noopener noreferrer">QtAv</a>：基于Qt和FFmpeg的多媒体播放框架，能够帮助你轻而易举地编写出一个播放器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.libsdl.org/" target="_blank" rel="noopener noreferrer">SDL</a> ：简单直控媒体层</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.sfml-dev.org/" target="_blank" rel="noopener noreferrer">SFML</a> ：快速，简单的多媒体库</p>
<h2> 23、 网络</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cs.wustl.edu/~schmidt/ACE.html" target="_blank" rel="noopener noreferrer">ACE</a>：C++面向对象网络变成工具包</p>
<p><a href="https://link.zhihu.com/?target=http%3A//think-async.com/" target="_blank" rel="noopener noreferrer">Boost.Asio</a>：用于网络和底层I/O编程的跨平台的C++库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//casablanca.codeplex.com/" target="_blank" rel="noopener noreferrer">Casablanca</a>：C++ REST SDK</p>
<p><a href="https://link.zhihu.com/?target=http%3A//cpp-netlib.org/" target="_blank" rel="noopener noreferrer">cpp-netlib</a>：高级网络编程的开源库集合</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/rxi/dyad" target="_blank" rel="noopener noreferrer">Dyad.c</a>：C语言的异步网络</p>
<p><a href="https://link.zhihu.com/?target=http%3A//curl.haxx.se/libcurl/" target="_blank" rel="noopener noreferrer">libcurl</a> :多协议文件传输库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/mongoose" target="_blank" rel="noopener noreferrer">Mongoose</a>：非常轻量级的网络服务器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/chenshuo/muduo" target="_blank" rel="noopener noreferrer">Muduo</a> ：用于Linux多线程服务器的C++非阻塞网络库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/net_skeleton" target="_blank" rel="noopener noreferrer">net_skeleton</a> ：C/C++的TCP 客户端/服务器库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/riolet/nope.c" target="_blank" rel="noopener noreferrer">nope.c</a> ：基于C语言的超轻型软件平台，用于可扩展的服务器端和网络应用。 对于C编程人员，可以考虑node.js</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/davidmoreno/onion" target="_blank" rel="noopener noreferrer">Onion</a> :C语言HTTP服务器库，其设计为轻量级，易使用。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/pocoproject" target="_blank" rel="noopener noreferrer">POCO</a>：用于构建网络和基于互联网应用程序的C++类库，可以运行在桌面，服务器，移动和嵌入式系统。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/OculusVR/RakNet" target="_blank" rel="noopener noreferrer">RakNet</a>：为游戏开发人员提供的跨平台的开源C++网络引擎。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/vinipsmaker/tufao" target="_blank" rel="noopener noreferrer">Tuf o</a> ：用于Qt之上的C++构建的异步Web框架。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/zaphoyd/websocketpp" target="_blank" rel="noopener noreferrer">WebSocket++</a> ：基于C++/Boost Aiso的websocket 客户端/服务器库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//zeromq.org/" target="_blank" rel="noopener noreferrer">ZeroMQ</a> ：高速，模块化的异步通信库</p>
<h2> 24、 物理学</h2>
<p>动力学仿真引擎</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/box2d/" target="_blank" rel="noopener noreferrer">Box2D</a>：2D的游戏物理引擎。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/bulletphysics/bullet3" target="_blank" rel="noopener noreferrer">Bullet</a> ：3D的游戏物理引擎。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/slembcke/Chipmunk2D" target="_blank" rel="noopener noreferrer">Chipmunk</a> ：快速，轻量级的2D游戏物理库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/google/liquidfun" target="_blank" rel="noopener noreferrer">LiquidFun</a>：2D的游戏物理引擎</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.ode.org/" target="_blank" rel="noopener noreferrer">ODE</a> ：开放动力学引擎-开源，高性能库，模拟刚体动力学。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/vanderlin/ofxBox2d" target="_blank" rel="noopener noreferrer">ofxBox2d</a>：Box2D开源框架包装器。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/simbody/simbody" target="_blank" rel="noopener noreferrer">Simbody</a> ：高性能C++多体动力学/物理库，模拟关节生物力学和机械系统，像车辆，机器人和人体骨骼。</p>
<h2> 25、 机器人学</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//moos-ivp.org/" target="_blank" rel="noopener noreferrer">MOOS-IvP</a> ：一组开源C++模块，提供机器人平台的自主权，尤其是自主的海洋车辆。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.mrpt.org/" target="_blank" rel="noopener noreferrer">MRPT</a>：移动机器人编程工具包</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/PointCloudLibrary/pcl" target="_blank" rel="noopener noreferrer">PCL</a> ：点云库是一个独立的，大规模的开放项目，用于2D/3D图像和点云处理。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.roboticslibrary.org/" target="_blank" rel="noopener noreferrer">Robotics Library (RL)</a>： 一个独立的C++库，包括机器人动力学，运动规划和控制。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.robwork.dk/jrobwork/" target="_blank" rel="noopener noreferrer">RobWork</a>：一组C++库的集合，用于机器人系统的仿真和控制。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//wiki.ros.org/" target="_blank" rel="noopener noreferrer">ROS</a> ：机器人操作系统，提供了一些库和工具帮助软件开发人员创建机器人应用程序。</p>
<h2> 26、 科学计算</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.fftw.org/" target="_blank" rel="noopener noreferrer">FFTW</a> :用一维或者多维计算DFT的C语言库。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.gnu.org/software/gsl/" target="_blank" rel="noopener noreferrer">GSL</a>：GNU科学库。</p>
<h2> 27、 脚本</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ChaiScript/ChaiScript/" target="_blank" rel="noopener noreferrer">ChaiScript</a> ：用于C++的易于使用的嵌入式脚本语言。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.lua.org/" target="_blank" rel="noopener noreferrer">Lua</a> ：用于配置文件和基本应用程序脚本的小型快速脚本引擎。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/dafrito/luacxx" target="_blank" rel="noopener noreferrer">luacxx</a>：用于创建Lua绑定的C++ 11 API</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.swig.org/" target="_blank" rel="noopener noreferrer">SWIG</a> ：一个可以让你的C++代码链接到JavaScript，Perl，PHP，Python，Tcl和Ruby的包装器/接口生成器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/v7" target="_blank" rel="noopener noreferrer">V7</a>：嵌入式的JavaScript 引擎。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/v8/" target="_blank" rel="noopener noreferrer">V8</a> ：谷歌的快速JavaScript引擎，可以被嵌入到任何C++应用程序中。</p>
<h2> 28、 序列化</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//kentonv.github.io/capnproto/" target="_blank" rel="noopener noreferrer">Cap’n Proto</a> ：快速数据交换格式和RPC系统。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/USCiLab/cereal" target="_blank" rel="noopener noreferrer">cereal</a> ：C++11 序列化库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/google/flatbuffers" target="_blank" rel="noopener noreferrer">FlatBuffers</a> ：内存高效的序列化库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/msgpack/msgpack-c" target="_blank" rel="noopener noreferrer">MessagePack</a> ：C/C++的高效二进制序列化库，例如 JSON</p>
<p><a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/protobuf/" target="_blank" rel="noopener noreferrer">protobuf</a> ：协议缓冲，谷歌的数据交换格式。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/protobuf-c/protobuf-c" target="_blank" rel="noopener noreferrer">protobuf-c</a> ：C语言的协议缓冲实现</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/real-logic/simple-binary-encoding" target="_blank" rel="noopener noreferrer">SimpleBinaryEncoding</a>：用于低延迟应用程序的对二进制格式的应用程序信息的编码和解码。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//thrift.apache.org/" target="_blank" rel="noopener noreferrer">Thrift</a> ：高效的跨语言IPC/RPC，用于C++，Java，Python，PHP，C#和其它多种语言中，最初由Twitter开发。</p>
<h2> 29、 视频</h2>
<p><a href="https://link.zhihu.com/?target=http%3A//www.webmproject.org/code/" target="_blank" rel="noopener noreferrer">libvpx</a> ：VP8/VP9编码解码SDK</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.ffmpeg.org/" target="_blank" rel="noopener noreferrer">FFmpeg</a> ：一个完整的，跨平台的解决方案，用于记录，转换视频和音频流。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/strukturag/libde265" target="_blank" rel="noopener noreferrer">libde265</a> ：开放的h.265视频编解码器的实现。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cisco/openh264" target="_blank" rel="noopener noreferrer">OpenH264</a>：开源H.364 编解码器。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.theora.org/" target="_blank" rel="noopener noreferrer">Theora</a> ：免费开源的视频压缩格式。</p>
<h2> 30、 虚拟机</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/tekknolagi/carp" target="_blank" rel="noopener noreferrer">CarpVM</a>：C中有趣的VM，让我们一起来看看这个。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/micropython/micropython" target="_blank" rel="noopener noreferrer">MicroPython</a> ：旨在实现单片机上Python3.x的实现</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jakogut/tinyvm" target="_blank" rel="noopener noreferrer">TinyVM</a>：用纯粹的ANSI C编写的小型，快速，轻量级的虚拟机。</p>
<h2> 31、 Web应用框架</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/bel2125/civetweb" target="_blank" rel="noopener noreferrer">Civetweb</a> ：提供易于使用，强大的，C/C++嵌入式Web服务器，带有可选的CGI，SSL和Lua支持。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//cppcms.com/" target="_blank" rel="noopener noreferrer">CppCMS</a> ：免费高性能的Web开发框架（不是 CMS）.</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ipkn/crow" target="_blank" rel="noopener noreferrer">Crow</a> ：一个C++微型web框架（灵感来自于Python Flask）</p>
<p><a href="https://link.zhihu.com/?target=https%3A//kore.io/" target="_blank" rel="noopener noreferrer">Kore</a> :使用C语言开发的用于web应用程序的超快速和灵活的web服务器/框架。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.coralbits.com/libonion/" target="_blank" rel="noopener noreferrer">libOnion</a>：轻量级的库，帮助你使用C编程语言创建web服务器。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jlaine/qdjango/" target="_blank" rel="noopener noreferrer">QDjango</a>：使用C++编写的，基于Qt库的web框架，试图效仿Django API，因此得此名。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.webtoolkit.eu/wt" target="_blank" rel="noopener noreferrer">Wt</a> ：开发Web应用的C++库。</p>
<h2> 32、 XML</h2>
<p>XML就是个垃圾，xml的解析很烦人，对于计算机它也是个灾难。这种糟糕的东西完全没有存在的理由了。-Linus Torvalds</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.libexpat.org/" target="_blank" rel="noopener noreferrer">Expat</a> ：用C语言编写的xml解析库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//xmlsoft.org/" target="_blank" rel="noopener noreferrer">Libxml2</a> ：Gnome的xml C解析器和工具包</p>
<p><a href="https://link.zhihu.com/?target=http%3A//libxmlplusplus.sourceforge.net/" target="_blank" rel="noopener noreferrer">libxml++</a> ：C++的xml解析器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//pugixml.org/" target="_blank" rel="noopener noreferrer">PugiXML</a> ：用于C++的，支持XPath的轻量级，简单快速的XML解析器。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//rapidxml.sourceforge.net/" target="_blank" rel="noopener noreferrer">RapidXml</a> ：试图创建最快速的XML解析器，同时保持易用性，可移植性和合理的W3C兼容性。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//sourceforge.net/projects/tinyxml/" target="_blank" rel="noopener noreferrer">TinyXML</a> ：简单小型的C++XML解析器，可以很容易地集成到其它项目中。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/leethomason/tinyxml2" target="_blank" rel="noopener noreferrer">TinyXML2</a>：简单快速的C++CML解析器，可以很容易集成到其它项目中。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/ticpp/" target="_blank" rel="noopener noreferrer">TinyXML++</a>：TinyXML的一个全新的接口，使用了C++的许多许多优势，模板，异常和更好的异常处理。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//xerces.apache.org/xerces-c/" target="_blank" rel="noopener noreferrer">Xerces-C++</a> ：用可移植的C++的子集编写的XML验证解析器。</p>
<h2> 33、 多项混杂</h2>
<p>一些有用的库或者工具，但是不适合上面的分类，或者还没有分类。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cppformat/cppformat" target="_blank" rel="noopener noreferrer">C++ Format</a> ：C++的小型，安全和快速格式化库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/casacore/" target="_blank" rel="noopener noreferrer">casacore</a> ：从aips++ 派生的一系列C++核心库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/louisdx/cxx-prettyprint" target="_blank" rel="noopener noreferrer">cxx-prettyprint</a>：用于C++容器的打印库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.dynaforms.com/" target="_blank" rel="noopener noreferrer">DynaPDF</a> ：易于使用的PDF生成库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/leafsr/gcc-poison" target="_blank" rel="noopener noreferrer">gcc-poison</a> ：帮助开发人员禁止应用程序中的不安全的C/C++函数的简单的头文件。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//code.google.com/p/googlemock/" target="_blank" rel="noopener noreferrer">googlemock</a>：编写和使用C++模拟类的库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/joyent/http-parser" target="_blank" rel="noopener noreferrer">HTTP Parser</a> ：C的http请求/响应解析器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/anrieff/libcpuid" target="_blank" rel="noopener noreferrer">libcpuid</a> ：用于x86 CPU检测盒特征提取的小型C库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/avati/libevil" target="_blank" rel="noopener noreferrer">libevil</a> ：许可证管理器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.libusb.org/" target="_blank" rel="noopener noreferrer">libusb</a>：允许移动访问USB设备的通用USB库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//pcre.org/" target="_blank" rel="noopener noreferrer">PCRE</a>：正则表达式C库，灵感来自于Perl中正则表达式的功能。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.deltavsoft.com/" target="_blank" rel="noopener noreferrer">Remote Call Framework</a> ：C++的进程间通信框架。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//scintilla.org/" target="_blank" rel="noopener noreferrer">Scintilla</a> ：开源的代码编辑控件</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/wjwwood/serial" target="_blank" rel="noopener noreferrer">Serial Communication Library</a> ：C++语言编写的跨平台，串口库。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/antirez/sds" target="_blank" rel="noopener noreferrer">SDS</a>：C的简单动态字符串库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/sldr" target="_blank" rel="noopener noreferrer">SLDR</a> ：超轻的DNS解析器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cesanta/slre" target="_blank" rel="noopener noreferrer">SLRE</a>： 超轻的正则表达式库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/rtv/Stage" target="_blank" rel="noopener noreferrer">Stage</a> ：移动机器人模拟器</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/vartypes/" target="_blank" rel="noopener noreferrer">VarTypes</a>：C++/Qt4功能丰富，面向对象的管理变量的框架。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//zbar.sourceforge.net/" target="_blank" rel="noopener noreferrer">ZBar</a>：‘条形码扫描器’库，可以扫描照片，图片和视频流中的条形码，并返回结果。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/VerbalExpressions/CppVerbalExpressions" target="_blank" rel="noopener noreferrer">CppVerbalExpressions</a> ：易于使用的C++正则表达式</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/VerbalExpressions/QtVerbalExpressions" target="_blank" rel="noopener noreferrer">QtVerbalExpressions</a>：基于C++ VerbalExpressions 库的Qt库</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/CopernicaMarketingSoftware/PHP-CPP" target="_blank" rel="noopener noreferrer">PHP-CPP</a>：使用C++来构建PHP扩展的库</p>
<p><a href="https://link.zhihu.com/?target=http%3A//bstring.sourceforge.net/" target="_blank" rel="noopener noreferrer">Better String</a> ：C的另一个字符串库，功能更丰富，但是没有缓冲溢出问题，还包含了一个C++包装器。</p>
<h2> 34、 软件</h2>
<p>用于创建开发环境的软件</p>
<p><a href="https://www.baidu.com/link?url=PbmnGuyJPfgmK-CF1KMFZglqltWBxDM6L5LCJw3uCvWFgMTp1hOPS2tSI_jmIfb5&amp;wd=&amp;eqid=e60c22f8001b4a720000000662620480" target="_blank" rel="noopener noreferrer">aardio</a> : arrdio是一个能在windows系统中快速创建一个应用程序的一门语言，也是一个超级胶水工具。你可以用python、java、C、C#、javastrip、PHP等数值的编程语言结合arrdio几分钟就可以开发一款带界面的桌面应用程序。你可以用html的方式来创建一个界面或者用其他界面库来创建一个界面。一切都是你说了算！超小的软件体积，超快的创建速度！</p>
<p><a href="https://cmder.net/" target="_blank" rel="noopener noreferrer">cmder</a>: cmder是一个增强型命令行工具，不仅可以使用 windows 下的所有命令，更爽的是可以使用linux的命令,shell命令。windows 下的软件.</p>
<h2> 35、 编译器</h2>
<p>C/C++编译器列表</p>
<p><a href="https://link.zhihu.com/?target=http%3A//clang.llvm.org/" target="_blank" rel="noopener noreferrer">Clang</a> :由苹果公司开发的</p>
<p><a href="https://link.zhihu.com/?target=https%3A//gcc.gnu.org/" target="_blank" rel="noopener noreferrer">GCC</a>：GNU编译器集合</p>
<p><a href="https://link.zhihu.com/?target=https%3A//software.intel.com/en-us/c-compilers" target="_blank" rel="noopener noreferrer">Intel C++ Compiler</a> ：由英特尔公司开发</p>
<p><a href="https://link.zhihu.com/?target=http%3A//llvm.org/" target="_blank" rel="noopener noreferrer">LLVM</a> ：模块化和可重用编译器和工具链技术的集合</p>
<p><a href="https://link.zhihu.com/?target=http%3A//msdn.microsoft.com/en-us/vstudio/hh386302.aspx" target="_blank" rel="noopener noreferrer">Microsoft Visual C++</a> ：MSVC，由微软公司开发</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.openwatcom.org/index.php/Main_Page" target="_blank" rel="noopener noreferrer">Open WatCom</a> ：Watcom，C，C++和Fortran交叉编译器和工具</p>
<p><a href="https://link.zhihu.com/?target=http%3A//bellard.org/tcc/" target="_blank" rel="noopener noreferrer">TCC</a> ：轻量级的C语言编译器</p>
<h2> 36、 在线编译器</h2>
<p>在线C/C++编译器列表</p>
<p><a href="https://link.zhihu.com/?target=http%3A//codepad.org/" target="_blank" rel="noopener noreferrer">codepad</a> ：在线编译器/解释器，一个简单的协作工具</p>
<p><a href="https://link.zhihu.com/?target=http%3A//codetwist.com/" target="_blank" rel="noopener noreferrer">CodeTwist</a>：一个简单的在线编译器/解释器，你可以粘贴的C,C++或者Java代码，在线执行并查看结果</p>
<p><a href="https://link.zhihu.com/?target=http%3A//coliru.stacked-crooked.com/" target="_blank" rel="noopener noreferrer">coliru</a> ：在线编译器/shell， 支持各种C++编译器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//gcc.godbolt.org/" target="_blank" rel="noopener noreferrer">Compiler Explorer</a>：交互式编译器，可以进行汇编输出</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.compileonline.com/compile_cpp11_online.php" target="_blank" rel="noopener noreferrer">CompileOnline</a>：Linux上在线编译和执行C++程序</p>
<p><a href="https://link.zhihu.com/?target=http%3A//ideone.com/" target="_blank" rel="noopener noreferrer">Ideone</a> ：一个在线编译器和调试工具，允许你在线编译源代码并执行，支持60多种编程语言。</p>
<h2> 37、 调试器</h2>
<p>C/C++调试器列表</p>
<p><a href="https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Comparison_of_debuggers" target="_blank" rel="noopener noreferrer">Comparison of debuggers</a> ：来自维基百科的调试器列表</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.gnu.org/software/gdb" target="_blank" rel="noopener noreferrer">GDB</a> ：GNU调试器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//valgrind.org/" target="_blank" rel="noopener noreferrer">Valgrind</a>：内存调试，内存泄露检测，性能分析工具。</p>
<h2> 38、 集成开发环境（IDE）</h2>
<p>C/C++集成开发环境列表</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.jetbrains.com/objc/" target="_blank" rel="noopener noreferrer">AppCode</a> ：构建与JetBrains’ IntelliJ IDEA 平台上的用于Objective-C，C,C++，Java和Java开发的集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.jetbrains.com/clion/" target="_blank" rel="noopener noreferrer">CLion</a>：来自JetBrains的跨平台的C/C++的集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.codeblocks.org/" target="_blank" rel="noopener noreferrer">Code::Blocks</a> ：免费C，C++和Fortran的集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//codelite.org/" target="_blank" rel="noopener noreferrer">CodeLite</a> ：另一个跨平台的免费的C/C++集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener noreferrer">Dev-C++</a>：可移植的C/C++/C++11集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.eclipse.org/cdt/" target="_blank" rel="noopener noreferrer">Eclipse CDT</a>：基于Eclipse平台的功能齐全的C和C++集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.geany.org/" target="_blank" rel="noopener noreferrer">Geany</a> ：轻量级的快速，跨平台的集成开发环境。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www-03.ibm.com/software/products/en/visgen" target="_blank" rel="noopener noreferrer">IBM VisualAge</a> ：来自IBM的家庭计算机集成开发环境。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Sarcasm/irony-mode" target="_blank" rel="noopener noreferrer">Irony-mode</a>：由libclang驱动的用于Emacs的C/C++微模式</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.kdevelop.org/" target="_blank" rel="noopener noreferrer">KDevelop</a>：免费开源集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.visualstudio.com/" target="_blank" rel="noopener noreferrer">Microsoft Visual Studio</a> ：来自微软的集成开发环境</p>
<p><a href="https://link.zhihu.com/?target=https%3A//netbeans.org/" target="_blank" rel="noopener noreferrer">NetBeans</a> ：主要用于Java开发的的集成开发环境，也支持其他语言，尤其是PHP，C/C++和HTML5。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//qt-project.org/" target="_blank" rel="noopener noreferrer">Qt Creator</a>：跨平台的C++，Javascript和QML集成开发环境，也是Qt SDK的一部分。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Andersbakken/rtags" target="_blank" rel="noopener noreferrer">rtags</a>：C/C++的客户端服务器索引，用于 跟基于clang的emacs的集成</p>
<p><a href="https://link.zhihu.com/?target=https%3A//developer.apple.com/xcode/" target="_blank" rel="noopener noreferrer">Xcode</a> ：由苹果公司开发</p>
<p><a href="https://link.zhihu.com/?target=https%3A//valloric.github.io/YouCompleteMe/" target="_blank" rel="noopener noreferrer">YouCompleteMe</a>：一个用于Vim的根据你敲的代码快速模糊搜索并进行代码补全的引擎。</p>
<h2> 39、 构建系统</h2>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/rizsotto/Bear" target="_blank" rel="noopener noreferrer">Bear</a> ：用于为clang工具生成编译数据库的工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.biicode.com/" target="_blank" rel="noopener noreferrer">Biicode</a>：基于文件的简单依赖管理器。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.cmake.org/" target="_blank" rel="noopener noreferrer">CMake</a> ：跨平台的免费<a href="https://link.zhihu.com/?target=http%3A//www.codeceo.com/article/category/project" target="_blank" rel="noopener noreferrer">开源软件</a>用于管理软件使用独立编译的方法进行构建的过程。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/iauns/cpm" target="_blank" rel="noopener noreferrer">CPM</a>：基于CMake和Git的C++包管理器</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.fastbuild.org/docs/home.html" target="_blank" rel="noopener noreferrer">FASTBuild</a>：高性能，开源的构建系统，支持高度可扩展性的编译，缓冲和网络分布。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//martine.github.io/ninja/" target="_blank" rel="noopener noreferrer">Ninja</a> ：专注于速度的小型构建系统</p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.scons.org/" target="_blank" rel="noopener noreferrer">Scons</a> ：使用Python scipt 配置的软件构建工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/deplinenoise/tundra" target="_blank" rel="noopener noreferrer">tundra</a> ：高性能的代码构建系统，甚至对于非常大型的软件项目，也能提供最好的增量构建次数。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//gittup.org/tup/" target="_blank" rel="noopener noreferrer">tup</a>：基于文件的构建系统，用于后台监控变化的文件。</p>
<h2> 40、 静态代码分析</h2>
<p>提高质量，减少瑕疵的代码分析工具列表</p>
<p><a href="https://link.zhihu.com/?target=http%3A//cppcheck.sourceforge.net/" target="_blank" rel="noopener noreferrer">Cppcheck</a> ：静态C/C++代码分析工具</p>
<p><a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/include-what-you-use/" target="_blank" rel="noopener noreferrer">include-what-you-use</a> ：使用clang进行代码分析的工具，可以#include在C和C++文件中。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//oclint.org/" target="_blank" rel="noopener noreferrer">OCLint</a> ：用于C，C++和Objective-C的静态源代码分析工具，用于提高质量，减少瑕疵。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//clang-analyzer.llvm.org/index.html" target="_blank" rel="noopener noreferrer">Clang Static Analyzer</a>：查找C，C++和Objective-C程序bug的源代码分析工具</p>
<p><a href="https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis%23C.2FC.2B.2B" target="_blank" rel="noopener noreferrer">List of tools for static code analysis</a> ：来自维基百科的静态代码分析工具列表</p>
<h2> 41、 linux 实用工具</h2>
<p><a href="https://github.com/npat-efault/picocom" target="_blank" rel="noopener noreferrer">picocom</a>: linux 下的一个好用的串口终端.</p>
<p><a href="https://github.com/tats/w3m" target="_blank" rel="noopener noreferrer">w3m</a> : 终端浏览器,真正的程序员就该使用命令行来浏览网页。</p>
<p><a href="https://github.com/nvbn/thefuck" target="_blank" rel="noopener noreferrer">The Fuck</a> : 在终端下是不是经常输错命令，搞得自己心烦意乱，The Fuck 是一款了不起的工具，帮你彻底解决这个问题，当你输错命令后，只要输入 fuck 命令，它会帮你自动纠正错误，精彩之极！</p>
<p><a href="https://github.com/tldr-pages/tldr" target="_blank" rel="noopener noreferrer">tldr</a> : tldr  是 Too long, Don't read 的缩写，可以帮助你快速查看常用命令的使用实例，比如 tar 命令，那后面一长串参数谁记得清呢？当然，linux 大佬除外。</p>
<p><a href="https://github.com/junegunn/fzf" target="_blank" rel="noopener noreferrer">fzf</a> : fzf 是一款支持模糊搜索的交互式工具，可以用来查找任何列表内容，包括文件、Git 分支、进程等。</p>
<p><a href="https://github.com/sharkdp/fd" target="_blank" rel="noopener noreferrer">fd</a> : 简单、快速、好用，用于替换 find 的搜索工具。</p>
<p><a href="https://github.com/ogham/exa" target="_blank" rel="noopener noreferrer">exa</a> : 用来替换 ls 命令的现代化工具。</p>
<p><a href="https://github.com/jarun/nnn" target="_blank" rel="noopener noreferrer">nnn</a> : nnn (n³) 是一个功能齐全的终端文件管理器，速度非常快且几乎 0 配置，也是一个非常不错的选择。</p>
<p><a href="https://github.com/powerline/powerline" target="_blank" rel="noopener noreferrer">powerline</a> : 终端本身是高效的，但有时也略显乏味，使用 powerline 可以为终端加上强大的 状态栏，比如在 vim 中显示当前状态，在打开 git 目录时显示当前分支等等。</p>
<p><a href="https://github.com/dtrx-py/dtrx/" target="_blank" rel="noopener noreferrer">dtrx</a> 有了这个工具你基本再也不用记住如何在linux上面解压各种后缀的文件了，什么tar.gz,tgz,xz,bz2,zip.rar等通通搞定，这是一个python工具.</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/wting/autojump" target="_blank" rel="noopener noreferrer">autojump</a> : 记忆进过的文件夹，下次可用 j + 文件夹名 直接跳进， 很方便.软件安装完后输入下面命令生效终端 (echo ""# autojump\nsource /usr/share/autojump/autojump.bash" &gt;&gt; ~/.bashrc)</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jandob/rebash" target="_blank" rel="noopener noreferrer">rebash</a> : 脚本库/框架。特点：进口，例外，文件测试...</p>
<p><a href="https://link.zhihu.com/?target=https%3A//ianmiell.github.io/shutit/" target="_blank" rel="noopener noreferrer">shutit</a> : 基于bash和pexpect的自动化框架</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Mosai/workshop/blob/master/doc/dispatch.md" target="_blank" rel="noopener noreferrer">dispatch</a> : 50行可移植shell脚本中的命令行参数解析器。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jmcantrell/bashful" target="_blank" rel="noopener noreferrer">bashful</a> : 一个库的集合，以简化编写Bash脚本</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/fidian/ansi" target="_blank" rel="noopener noreferrer">ansi</a> : 在纯bash中的ANSI转义码 - 更改文本颜色，定位光标，等等</p>
<p><a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Sed" target="_blank" rel="noopener noreferrer">history</a> :非常简单，尤其是在你依赖于复制使用过的命令时，这个命令特别有用。</p>
<p>sort, uniq：排序去重。</p>
<p>awk, grep, sed：文本处理神器。</p>
<p><a href="https://shenhonglei.blog.csdn.net/article/details/108045923?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_antiscanv2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2.pc_relevant_antiscanv2&amp;utm_relevant_index=5" target="_blank" rel="noopener noreferrer">jq</a>，命令行的json查询和格式化工具，适合查看rest接口的输出</p>
<p>strace，打印出进程调用了哪些系统调用。</p>
<p>objdump，打印目标码和反汇编结果</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/dutchcoders/transfer.sh" target="_blank" rel="noopener noreferrer">transfer.sh</a> :可通过简单的命令行来快速完成文件共享操作</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/DimitarPetrov/stegify" target="_blank" rel="noopener noreferrer">stegify</a> : 一款神奇的命令行工具，能将任意文件隐藏到图片里面。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jakubroztocil/httpie" target="_blank" rel="noopener noreferrer">Httpie</a>一个 HTTP 命令行客户端，使用起来比 curl 更为友好，并支持输出 JSON、语法高亮等特性，为开发者呈现更为直观的 UI，与服务器间的调试体验也更为人性化。</p>
<p><a href="https://link.zhihu.com/?target=http%3A//pm2.keymetrics.io/" target="_blank" rel="noopener noreferrer">PM2</a> :用以在后台运行和管理进程</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/SpaceVim/SpaceVim" target="_blank" rel="noopener noreferrer">SpaceVim</a>：这是一个 vim 插件，使你的 Vim 变成带代码自动补全等功能的更加强大的代码编辑器！</p>
<p>axel：多线程断点下载工具，非常好用。例如下图中这样，指定了 8 个线程同时下载。</p>
<p>nmon：它能够帮你进行电脑的性能监控，包括 CPU，内存，磁盘 IO，网络 IO，并且界面很炫酷，是不是很像黑客，快去试试吧 <a href="https://link.zhihu.com/?target=http%3A//nmon.sourceforge.net/pmwiki.php" target="_blank" rel="noopener noreferrer">nmon for Linux | Main</a></p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/get-alex/alex" target="_blank" rel="noopener noreferrer">Alex</a>：它是一个简单但很有用的小工具。适用于明文文本或者格式为 Markdown 或 HTML 的文档。Alex 会对“性别偏好、极端主义、种族相关、宗教，或者文章中其他不平等的措辞”产生警告。如果你想要试试看 Alex，这里有一个在线 <a href="https://link.zhihu.com/?target=https%3A//alexjs.com/%23demo" target="_blank" rel="noopener noreferrer">demo</a>；</p>
<p><a href="https://link.zhihu.com/?target=http%3A//aspell.net/" target="_blank" rel="noopener noreferrer">GNU Aspell</a>：它能够交互式地检测文本文档，能高亮显示拼写错误，还能在拼写错误的上方提供正确的拼写建议。Aspell 在进行拼写检查的时候，同样能够忽略许多语法标记；</p>
<p><a href="https://link.zhihu.com/?target=http%3A//proselint.com/" target="_blank" rel="noopener noreferrer">Proselint</a>：它是一款全能的实时检查工具。它会找出行话、大话、不正确日期和时间格式、滥用的术语<a href="https://link.zhihu.com/?target=http%3A//proselint.com/checks/" target="_blank" rel="noopener noreferrer">等等</a>。它也很容易运行并忽略文本中的标记；</p>
<p><a href="https://link.zhihu.com/?target=https%3A//cowlark.com/wordgrinder/" target="_blank" rel="noopener noreferrer">WordGrinder</a>：它是一款使用起来很简单，但拥有足够的编写和发布功能的文字编辑器。它支持基本的格式和样式，并且你可以将你的文字以 Markdown、ODT、LaTeX 或者 HTML 等格式导出；</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/cgag/loc" target="_blank" rel="noopener noreferrer">cloc</a>: 用来统计代码行数，统计结果比较分类比较详细，支持大部分编程语言。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/tldr-pages/tldr" target="_blank" rel="noopener noreferrer">tldr</a>: 如果你经常不想详读man文档，那么你应该试试这个小工具。</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/aitjcize/cppman" target="_blank" rel="noopener noreferrer">cppman</a>：C++ 98/11/14 手册查询 for Linux/MacOS</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/jeffkaufman/icdiff" target="_blank" rel="noopener noreferrer">icdiff</a>：分屏显示 diff</p>
<p><a href="https://link.zhihu.com/?target=https%3A//midnight-commander.org/" target="_blank" rel="noopener noreferrer">mcedit</a>：终端下面的 NotePad++</p>
<p><a href="https://link.zhihu.com/?target=https%3A//owncloud.org/download/" target="_blank" rel="noopener noreferrer">owncloud</a>：DropBox 的开源替代品，提供命令行客户端 owncloudcmd</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/Angelmmiguel/pm" target="_blank" rel="noopener noreferrer">pm</a>：在 bash / zsh 中迅速切换项目目录</p>
<p><a href="https://link.zhihu.com/?target=https%3A//dev.yorhel.nl/ncdu" target="_blank" rel="noopener noreferrer">ncdu</a>：可视化的空间分析程序,你发现有人把 /home 空间撑爆了，影响了大家的工作，你愤怒了一层层的 du，一层层的 cd，整个过程就像刨垃圾堆一样的恶心，后来发现了 ncdu 这个基于 ncurses 的空间分析程序：</p>
<p><a href="https://link.zhihu.com/?target=https%3A//nicolargo.github.io/glances/" target="_blank" rel="noopener noreferrer">glances</a>：更强大的 htop / top 代替者 htop 代替 top，glances 代替 htop：</p>
<p><a href="https://link.zhihu.com/?target=https%3A//midnight-commander.org/" target="_blank" rel="noopener noreferrer">mc</a> ：内容浏览/预览</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/ranger/ranger" target="_blank" rel="noopener noreferrer">ranger</a>：内容浏览/预览另一款内容预览软件，界面没有 mc 那么漂亮，标记拷贝也没它强，但是预览功能做的很不错，如果你习惯 vim 键位的话，你会发现ranger有些地方比 mc做的好不少：</p>
<p><a href="https://link.zhihu.com/?target=http%3A//dag.wiee.rs/home-made/dstat/" target="_blank" rel="noopener noreferrer">dstat</a>：vmstat 代替者,可能不少人都用过，但是本问题下好像没人提？</p>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/chrisallenlane/cheat" target="_blank" rel="noopener noreferrer">cheat</a>：命令行笔记,就是各种 cheat sheet ，比如经常搞忘 redis 命令的话，你可以新建 ~/.cheat/redis 这个文件，写一些内容，比如：</p>
<p><a href="https://link.zhihu.com/?target=https%3A//www.vanheusden.com/multitail/" target="_blank" rel="noopener noreferrer">multitail</a>：多重  tail,通常你不止一个日志文件要监控，怎么办？终端软件里开多个 tab 太占地方，可以试试这个工具：</p>
<p><a href="https://link.zhihu.com/?target=http%3A//bropages.org/" target="_blank" rel="noopener noreferrer">bro</a>：以用例为主的帮助系统,类似于man,但是对新手友好.</p>
<p>http.server : python中的一个本地小型 http 服务器,可以用于局域网传输文件.但没有上传功能.</p>
<p><a href="https://github.com/dianjixz/my_doc/blob/main/lib_example/python/SimpleHTTPServerWithUpload.py" target="_blank" rel="noopener noreferrer">SimpleHTTPServerWithUpload.py</a> : python中的一个本地小型 http 服务器,可以用于局域网传输文件.有上传功能.有 python2 和 python3 两个版本.</p>
<p>参考连接:<br>
<a href="https://zhuanlan.zhihu.com/p/30660979" target="_blank" rel="noopener noreferrer">干货| C++ 资源、框架大全，推荐收藏</a></p>
<p><a href="https://www.zhihu.com/question/59227720/answer/286665684" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/59227720/answer/286665684</a></p>
<p><a href="https://www.zhihu.com/question/59227720/answer/578875058" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/59227720/answer/578875058</a></p>
<p><a href="https://www.zhihu.com/question/59227720/answer/163933473" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/59227720/answer/163933473</a></p>
<p><a href="https://www.zhihu.com/question/59227720/answer/163966430" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/59227720/answer/163966430</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>无线监控小车</title>
      <link>https://boxsir.gitee.io/item/IoT/ESP32/monitorCar.html</link>
      <guid>https://boxsir.gitee.io/item/IoT/ESP32/monitorCar.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">无线监控小车</source>
      <description>无线监控小车 1.1 ESP32-CAM ESP32-CAM是一款基于ESP32芯片的集成式开发板，搭载了高性能的摄像头，并支持WiFi无线传输，可以实时传输监控画面到远程设备，实现远程监控功能。功能强大且灵活，可以轻松连接其他传感器和执行器，添加更多的智能功能，如红外传感器、超声波传感器等。ESP32-CAM采用低功耗设计，可以长时间运行，适用于电池供电的移动监控小车。具有丰富的IO接口，可以简单地扩展其他硬件模块，如电机驱动器、舵机等，以实现如自动避障、追踪等功能。ESP32-CAM的电路如图2所示。</description>
      <category>项目</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 无线监控小车</h1>
<h2> 1.1 ESP32-CAM</h2>
<p>ESP32-CAM是一款基于ESP32芯片的集成式开发板，搭载了高性能的摄像头，并支持WiFi无线传输，可以实时传输监控画面到远程设备，实现远程监控功能。功能强大且灵活，可以轻松连接其他传感器和执行器，添加更多的智能功能，如红外传感器、超声波传感器等。ESP32-CAM采用低功耗设计，可以长时间运行，适用于电池供电的移动监控小车。具有丰富的IO接口，可以简单地扩展其他硬件模块，如电机驱动器、舵机等，以实现如自动避障、追踪等功能。ESP32-CAM的电路如图2所示。</p>
<!-- more -->
<h2> 1.2 OV2640摄像头</h2>
<p>OV2640摄像头具有200万像素的高分辨率，能够提供清晰、细节丰富的图像，确保捕捉到准确的画面细节，提供高质量的监控和录像。摄像头模块集成了图像处理功能，包括自动曝光、自动白平衡、自动对焦等。这些功能可以自动优化图像质量，使图像在不同的光线条件下保持清晰和准确，获得最佳的图像效果。支持多种输出格式，包括JPEG、YUV、RGB565等，可以选择最合适的图像格式，以便进行进一步的分析和处理。摄像头可以以15帧/秒的速度拍摄2 Megapixels的图像，或以30帧/秒的速度拍摄较低分辨率的图像，这使得无线监控小车能够实时捕捉和传输图像，提供实时监控和响应能力。模块采用了低功耗设计，适用于需要长时间运行的应用场景，提高电池寿命，延长设备的工作时间。</p>
<h2> 1.3 L298N电机驱动</h2>
<p>L298N电机驱动芯片提供最大2A的电流输出，可以驱动各种类型和大小的直流电机，包括驱动力较大的电机，非常适合用于运行较重载荷的无线监控小车项目。可以实现直流电机的双向控制，即控制小车的前进、后退和转向。这使得无线监控小车能够在不同的场景中灵活移动和导航，提供更好的监控覆盖范围。通过使用PWM信号来控制电机驱动的输入引脚，可以实现对电机的精确速度控制，调整小车移动速度。L298N电机驱动支持5V至35V的电源电压范围，可以适应不同类型的电源配置，包括使用电池供电的情况，小车在不同的供电环境中都能正常运行。驱动具有过热保护功能，可在电机或芯片过热时自动停止工作，以保护设备的安全性。这在长时间运行或高负载条件下尤为重要，可以延长设备的使用寿命。L298N电机驱动控制逻辑关系如表1所示</p>
]]></content:encoded>
    </item>
    <item>
      <title>WiFi天气时钟系统设计</title>
      <link>https://boxsir.gitee.io/item/IoT/ESP32/weatherClock.html</link>
      <guid>https://boxsir.gitee.io/item/IoT/ESP32/weatherClock.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">WiFi天气时钟系统设计</source>
      <description>WiFi天气时钟系统设计 1总体结构 本系统通过手机连接ESP32上的WiFi模组，实现对系统的配网和城市选择。通过请求网络API获取实时天气数据。通过NTP服务器连接到高精度的时间源，获取同步的精准的时间信息，并在LCD模块上显示。研究主要包括对电子元器件ESP32主控芯片的控制和开发、调试LCD模块的显示效果和交互、硬件电路设计、开发环境配置、软件程序编写、测试和评估系统的性能等方面。该系统具有简单易用、稳定可靠等特点，可以满足人们对智能家居和智能设备的需求。系统总体结构如图1所示</description>
      <category>项目</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1> WiFi天气时钟系统设计</h1>
<h2> 1总体结构</h2>
<p>本系统通过手机连接ESP32上的WiFi模组，实现对系统的配网和城市选择。通过请求网络API获取实时天气数据。通过NTP服务器连接到高精度的时间源，获取同步的精准的时间信息，并在LCD模块上显示。研究主要包括对电子元器件ESP32主控芯片的控制和开发、调试LCD模块的显示效果和交互、硬件电路设计、开发环境配置、软件程序编写、测试和评估系统的性能等方面。该系统具有简单易用、稳定可靠等特点，可以满足人们对智能家居和智能设备的需求。系统总体结构如图1所示</p>
<!-- more -->
<h2> 2系统硬件设计</h2>
<p>本系统采用面包板作为设备搭建平台，直接将电子元器件引脚插入面包板插孔中，通过杜邦线将各个电子元器件链接，快速搭建和修改电子电路。省去焊接和拆焊的过程，不需要直接与高电压接触。电路采用跳线连接，可以减少因接触错误而导致的短路和电击的风险，更加快捷的进行系统的分析，原型设计和实验。系统中LCD屏幕与ESP32主板引脚连接如表1所示</p>
<h3> 2.1 ESP32芯片</h3>
<p>选择ESP32作为主控芯片，内置了WIFI和蓝牙的微控芯片。ESP32采用两个哈佛结构Xtensa LX6 CPU构成，拥有双核系统。所有的片上存储器、片外存储器以及外设都分布在两个CPU的数据总线和指令总线上。提供了强大的处理能力和丰富的外设接口，泛应用于物联网等领域。通过其强大的处理能力和多种接口，能够方便地连接到云平台、传感器、外设等设备，并实现各种智能化应用。<br>
ESP32一共有38个引脚，除去电源引脚外，可用IO引脚为34个。GPIO0到GPIO39用于输入或输出数字信号。GPIO32到GPIO39可用于模拟信号的采集，将模拟信号转换为数字信号。GPIO25和GPIO26用于输出模拟信号，将数字信号转换为模拟信号。UART0_TX、UART0_RX、UART1_TX、UART1_RX、UART2_TX、UART2_RX用于串行通信。GPIO21和GPIO22用于I2C总线通信。GPIO5（SPI0_CLK）、GPIO18（SPI0_CS）、GPIO19（SPI0_MISO）、GPIO23（SPI0_MOSI）用于SPI总线通信。GPIO25（I2S_BCLK）、GPIO26（I2S_LRC）、GPIO22（I2S_DOUT）、GPIO21（I2S_DIN）用于音频相关的数据传输。GPIO0到GPIO19、GPIO21到GPIO23、GPIO25、GPIO26、GPIO27用于产生脉冲宽度调制信号。<br>
需要注意的是，某些引脚可能有多个功能，并且在使用之前需要根据具体需求进行配置。此外，还有一些特殊引脚，如EN模组的电源使能引脚、VCC供电引脚和GND地引脚。在使用ESP32模组时，还需注意以下几点。ESP32引脚的电压范围为1.8V至3.3V，因此需要确保外部设备与模组的电压兼容。每个引脚的最大电流为12mA，总体最大电流为200mA。在设计电路时，需要注意不要超过这些限制，以免导致模组损坏。引脚具有多个功能，需要正确配置引脚功能以实现所需的功能。在高温环境下可能会过热，需注意散热和温度控制，以确保稳定运行。<br>
ESP32模组具有强大的功能和丰富的引脚资源，适用于各种应用领域。在使用时，需要根据所需功能和需求，正确配置引脚，并保证电压和电流的合适范围，以确保稳定可靠的运行。</p>
<h3> 2.2 LCD液晶屏</h3>
<p>选择1.54寸彩色TFT显示屏高清IPS LCD液晶屏240<em>240模块展示数据信息，分辨率为240</em>240像素。这种高分辨率的显示屏可以产生清晰、细腻的图像和文本显示效果，采用高清IPS（In-Plane Switching）面板技术，可提供更广阔的视角范围和更好的视觉效果。适合用于显示天气信息和时间。<br>
该显示屏具有较小的尺寸和低功耗、低发热和稳定的显示性能，可以用于各种嵌入式系统、智能手表、可穿戴设备和其他物联网应用。在使用过程中需要确保供电电压符合显示屏的要求，以避免损坏。连接合适的驱动芯片或模块，以实现正确的图像显示和触摸控制功能。有时需要使用转接板来适配显示屏和其他设备之间的接口差异。对于液晶屏模块, 在使用时需避免强烈冲击和大幅度扭曲，以免损坏显示模块。在使用时，需要注意供电电压、驱动控制、转接板以及可靠性问题，以确保显示屏的正常工作和长寿命。<br>
LCD液晶屏通过SPI接口的引脚将显示屏模块连接到主控制器。它具有高清显示、多种显示模式、可编程性等特点。连接LCD液晶屏与ESP32引脚可实现图形和文字信息的显示功能，需要确保正确地对应液晶屏的引脚与ESP32的引脚，以避免错误的连接导致显示异常或引脚损坏。确保为液晶屏和ESP32提供稳定的电源供应，并遵循其规格要求进行电气连接。在设计液晶屏功能时，需要正确配置并调用驱动程序，以确保其能够正确地与ESP32通信。在连接时，需留意其他设备或传感器是否与ESP32使用的引脚有冲突，以避免引脚冲突导致设备无法正常工作。确保正确的引脚对应、供电稳定、正确的屏幕驱动和避免引脚冲突是使用此功能时需要注意的关键点。</p>
<h3> 2.3 轻触立式按键</h3>
<p>选择6*6轻触立式按键。是一种较小的按键开关，有减轻使用者的手部负担，使用寿命长，操作简单等特点。这种尺寸适合在有限的空间内嵌入，可以满足紧凑设计的需求。本系统中按键主要用于界面动画风格和配网模式的切换。</p>
<h2> 3系统软件设计</h2>
<p>系统中使用到了Arduino平台，采用易于使用的硬件和软件开发工具，以简化电子项目的开发过程。ESP32和Arduino的结合使用，使得开发者能够利用ESP32的功能和Arduino的简洁易用性进行项目开发。使用C++编程语言来开发系统，简化了Arduino的库函数与ESP32的交互。开发环境采用VS Code软件。在VS Code的插件市场中搜索并安装Arduino插件，该插件提供了针对Arduino平台的开发环境和功能，指定ESP32的开发板型号、串口号和波特率，并确保正确配置。使用VS Code的Arduino插件，可以将代码编译和上传代码到ESP32开发板。插件处理编译和连接过程，并将生成的二进制文件通过串口上传到开发板。本系统软件部分的流程图如图2所示</p>
]]></content:encoded>
    </item>
    <item>
      <title>燃气报警系统设计</title>
      <link>https://boxsir.gitee.io/item/IoT/ESP8266/gasAlarm.html</link>
      <guid>https://boxsir.gitee.io/item/IoT/ESP8266/gasAlarm.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">燃气报警系统设计</source>
      <description>燃气报警系统设计 1 系统总体结构 系统总体结构主要由硬件设计和软件设计组成。ESP8266作为主控单元，负责数据采集、报警控制和通信功能。MQ-2传感器用于检测环境中的燃气浓度，以实时监测燃气泄漏情况。文字转语音模块，将报警信息转换为可听的语音提示。使用ESP8266的定时器和ADC模块进行数据采集和处理，判断燃气浓度是否超过设定阈值，并触发报警机制。系统总体结构如图1所示。</description>
      <category>项目</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h1> 燃气报警系统设计</h1>
<h2> 1 系统总体结构</h2>
<p>系统总体结构主要由硬件设计和软件设计组成。ESP8266作为主控单元，负责数据采集、报警控制和通信功能。MQ-2传感器用于检测环境中的燃气浓度，以实时监测燃气泄漏情况。文字转语音模块，将报警信息转换为可听的语音提示。使用ESP8266的定时器和ADC模块进行数据采集和处理，判断燃气浓度是否超过设定阈值，并触发报警机制。系统总体结构如图1所示。</p>
<!-- more -->
<h2> 2 系统硬件设计</h2>
<p>硬件设计主要包含四个模块，分别是主控模块、燃气浓度采集模块、文字转语音模块和警报模块。主控模块连接到电源，通过3V3引脚供电给燃气浓度采集模块和文字转语音模块。传感器通过A0引脚将读取到的模拟信号，传递给主控模块。主控模块的TX引脚与文字转语音模块的RX引脚相连，TX引脚用于发送数据，RX引脚用于接收数据，文字转语音模块将接收到的数据转为语音信号后传输给警报模块。系统中ESP8266芯片与MQ-2传感器，文字转语音模块的引脚接线如表1所示。</p>
<h3> 2.1 ESP8266芯片</h3>
<p>ESP8266成本较低，适用于小型物联网项目的开发。内置了WiFi模组，可以方便地连接到无线网络，实现远程监控和控制，对于燃气报警系统是非常重要的特性。内部搭载了高性能的处理器，能够运行复杂的算法和处理大量的数据。这使得它能够完成燃气传感器数据的处理和分析，进行报警判断和决策。具有多个通用输入输出引脚，可以连接外部传感器和执行器，实现与其他硬件设备的交互。ESP8266支持MicroPython进行编程和开发，具有丰富的开发资源和社区支持，开发燃气报警系统变得更加简单和便捷，可利用现有的库和示例代码进行快速开发。</p>
<h3> 2.2 MQ-2传感器</h3>
<p>MQ-2传感器是一种多气体检测器，能够检测多种可燃性气体，如甲烷、液化石油气、丙烷、氢气等。MQ-2具有很高的灵敏度，能够快速、准确地检测到燃气泄漏。能够实时监测环境中的气体浓度，并通过与ESP8266的连接，向系统发送相应的报警信号。具有低功耗特性，可以在长时间运行的情况下保持稳定的性能。MQ-2传感器采用了模拟输出方式，可以直接与ESP8266的模拟输入引脚连接，在硬件上的集成非常简单，且与ESP8266的通信也较为方便。价格相对较低，且易于获得，可以在开发过程中轻松获取所需数量的传感器，降低了项目成本和开发的难度。MQ-2常用的电路有两种，一种使用采用比较器电路监控，另一种为ADC电路检测，本文中采用的是ADC电路检测即将电压信号转化为数字信号，进而转化为精确的烟雾浓度值，ADC转换电路如图2所示。</p>
]]></content:encoded>
    </item>
    <item>
      <title>创建仓库</title>
      <link>https://boxsir.gitee.io/notes/ecology/git/create.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/git/create.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">创建仓库</source>
      <category>笔记</category>
      <pubDate>Thu, 12 Oct 2023 06:25:40 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>常用的git命令大全</title>
      <link>https://boxsir.gitee.io/notes/ecology/git/frequently.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/git/frequently.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">常用的git命令大全</source>
      <category>笔记</category>
      <pubDate>Thu, 12 Oct 2023 06:25:40 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>git合并提交代码</title>
      <link>https://boxsir.gitee.io/notes/ecology/git/merge.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/git/merge.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">git合并提交代码</source>
      <category>笔记</category>
      <pubDate>Thu, 12 Oct 2023 06:25:40 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux常用命令</title>
      <link>https://boxsir.gitee.io/notes/ecology/linux/frequently.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/linux/frequently.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Linux常用命令</source>
      <category>笔记</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux下安装jdk</title>
      <link>https://boxsir.gitee.io/notes/ecology/linux/installJdk.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/linux/installJdk.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Linux下安装jdk</source>
      <description>一、在/usr/local/目录下创建java目录 mkdir /usr/local/java cd /usr/local/java</description>
      <category>笔记</category>
      <pubDate>Tue, 10 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 一、在/usr/local/目录下创建java目录</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 二、下载jdk</h2>
<p>JDK1.8官网下载地址：<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html" target="_blank" rel="noopener noreferrer">https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html</a></p>
<p>放到/usr/local/java目录下，并解压</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 三、设置环境变量</h2>
<p>输入命令配置环境变量</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在编辑模式下(按i键或者insert键进入编辑模式)，在profile文件的最后加上如下配置：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按Esc退出编辑模式，再按<strong>Shift + :</strong> 输入<strong>wq</strong> 保存并退出</p>
<p>修改完成后输入命令重新加载配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 四、使用命令查看是否修改安装成功</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux下安装Nginx</title>
      <link>https://boxsir.gitee.io/notes/ecology/linux/installNginx.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/linux/installNginx.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Linux下安装Nginx</source>
      <description>提示 文档整理中。。。</description>
      <category>笔记</category>
      <pubDate>Tue, 10 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>文档整理中。。。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Linux下安装Redis</title>
      <link>https://boxsir.gitee.io/notes/ecology/linux/installRedis.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/linux/installRedis.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Linux下安装Redis</source>
      <description>1.安装依赖环境 yum install -y gcc</description>
      <category>笔记</category>
      <pubDate>Tue, 10 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 1.安装依赖环境</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 2.下载redis包并解压</h2>
<p>官网下载地址：Download | Redis</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 3.进入解压目录并编译</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 4.指定安装目录安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 5.通过守护进程方式启动</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 6.设置开机自启动</h2>
<p>切换到/lib/systemd/system/目录，创建redis.service文件。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>文件内容如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS：Type=forking这一句很关键，之前网上试了好多方法都不行。</p>
<h2> 7.设置开机启动命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 8.开放端口</h2>
<p>防火墙没开的无视</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux开放端口</title>
      <link>https://boxsir.gitee.io/notes/ecology/linux/openPort.html</link>
      <guid>https://boxsir.gitee.io/notes/ecology/linux/openPort.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Linux开放端口</source>
      <description>以下命令,适用 Centos7开放或者关闭具体端口 首先查看现在所有已开放的端口 开放指定端口 设置完成,下面会出现success,但是这时只是设置成功,还没生效。生效需要重启以下防火墙: 移除指定端口 重启防火墙 关闭防火墙 当需要的端口无法一一开启时,可以直接关闭防火墙 关闭之后,使用命令查看防火墙的状态</description>
      <category>笔记</category>
      <pubDate>Sat, 23 Sep 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->
<p>以下命令,适用 Centos7开放或者关闭具体端口<br>
首先查看现在所有已开放的端口</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开放指定端口</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置完成,下面会出现success,但是这时只是设置成功,还没生效。生效需要重启以下防火墙:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>移除指定端口</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启防火墙</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭防火墙<br>
当需要的端口无法一一开启时,可以直接关闭防火墙</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭之后,使用</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令查看防火墙的状态</p>
]]></content:encoded>
    </item>
    <item>
      <title>Vue简介</title>
      <link>https://boxsir.gitee.io/notes/front/vue/vue.html</link>
      <guid>https://boxsir.gitee.io/notes/front/vue/vue.html</guid>
      <source url="https://boxsir.gitee.io/rss.xml">Vue简介</source>
      <description>Author: Thor Version: 9.0.1 一、Vue简介 1.1 简介 Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式的js框架，发布于 2014 年 2 月。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库（如：vue-router，vue-resource，vuex）或既有项目整合。</description>
      <category>笔记</category>
      <pubDate>Thu, 12 Oct 2023 06:25:40 GMT</pubDate>
      <content:encoded><![CDATA[<figure><figcaption></figcaption></figure>
<blockquote>
<p>Author:  Thor</p>
<p>Version:  9.0.1</p>
</blockquote>
<h3> 一、Vue简介</h3>
<hr>
<h4> 1.1 简介</h4>
<blockquote>
<p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的<strong>渐进式</strong>的js框架，发布于 2014 年 2 月。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库（如：<a href="">vue-router</a>，<a href="">vue-resource</a>，<a href="">vuex</a>）或既有项目整合。</p>
</blockquote>
<h4> 1.2 MVVM 模式的实现者——双向数据绑定模式</h4>
<blockquote>
<ul>
<li>Model：模型层，在这里表示 JavaScript 对象 数据</li>
<li>View：视图层，在这里表示 DOM（HTML 操作的元素）</li>
<li>ViewModel：连接视图和数据的中间件，Vue.js 就是 MVVM 中的 ViewModel 层的实现者</li>
</ul>
</blockquote>
<figure><figcaption></figcaption></figure>
<blockquote>
<p>在 MVVM 架构中，是不允许 数据 和 视图 直接通信的，只能通过 ViewModel 来通信，而 ViewModel 就是定义了一个Observer` 观察者</p>
<ul>
<li>ViewModel 能够观察到数据的变化，并对视图下对应的内容进行更新</li>
<li>ViewModel 能够监听到视图的变化，并能够通知数据发生改变</li>
</ul>
<p>至此，我们就明白了，Vue.js 就是一个 MVVM 的实现者，他的核心就是实现了 DOM 监听 与 数据绑定</p>
</blockquote>
<h4> 1.3 其它 MVVM 实现者</h4>
<blockquote>
<ul>
<li>
<p>AngularJS</p>
<p>简单介绍一下，AngularJS诞生于2009年，由Misko Hevery 等人创建，后为Google所收购。是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVVM、<strong>模块化</strong>、自动化双向数据绑定、语义化标签、依赖注入等等。</p>
</li>
<li>
<p>ReactJS</p>
<p>React引入了<strong>虚拟DOM</strong>（Virtual DOM）的机制：在浏览器端用Javascript实现了一套DOM API。基于React进行开发时所有的DOM构造都是通过虚拟DOM进行，每当数据变化时，React都会重新构建整个DOM树，然后React将当前整个DOM树和上一次的DOM树进行对比，得到DOM结构的区别，然后仅仅将需要变化的部分进行实际的浏览器DOM更新。</p>
</li>
<li>
<p>微信小程序</p>
<p>微信小程序的视图层和数据层就是通过MVVM进行绑定的。</p>
</li>
</ul>
</blockquote>
<h4> 1.4 为什么要使用 Vue.js</h4>
<blockquote>
<ul>
<li>轻量级，体积小是一个重要指标。Vue.js 压缩后有只有 20多kb （Angular 压缩后 56kb+，React 压缩后 44kb+）</li>
<li>移动优先。更适合移动端，比如移动端的 Touch 事件</li>
<li>易上手，学习曲线平稳，文档齐全</li>
<li>吸取了 Angular（模块化）和 React（虚拟 DOM）的长处，并拥有自己独特的功能，如：计算属性</li>
<li>开源，社区活跃度高</li>
</ul>
</blockquote>
<h4> 1.5 Vue.js 的两大核心要素</h4>
<h5> 1.5.1 数据驱动</h5>
<figure><figcaption></figcaption></figure>
<blockquote>
<p>当你把一个普通的 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。Object.defineProperty 是 ES5 中一个无法 shim 的特性，这也就是为什么 Vue 不支持 IE8 以及更低版本浏览器。</p>
<p>这些 getter/setter 对用户来说是不可见的，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。这里需要注意的问题是浏览器控制台在打印数据对象时 getter/setter 的格式化并不同，所以你可能需要安装 vue-devtools 来获取更加友好的检查接口。</p>
<p>每个组件实例都有相应的 watcher 实例对象，它会在组件渲染的过程中把属性记录为依赖，之后当依赖项的 setter 被调用时，会通知 watcher 重新计算，从而致使它关联的组件得以更新。</p>
</blockquote>
<h5> 1.5.2 组件化</h5>
<blockquote>
<ul>
<li>
<p>页面上每个独立的可交互的区域视为一个组件</p>
<p>主板，显卡，cpu，硬盘，主机箱，电源，内存条  ===  主机  就是我们的html页面</p>
<p>主板：是零件，两件就是组件</p>
<p>主板：有各种简单的电路学组成，组件就是有简单的html标签组成</p>
<p>反过来书：HTML页面就是一个盒子，里面装着组件</p>
</li>
<li>
<p>每个组件对应一个工程目录，组件所需的各种资源在这个目录下就近维护</p>
</li>
<li>
<p>页面不过是组件的容器，组件可以嵌套自由组合（复用）形成完整的页面</p>
</li>
</ul>
</blockquote>
<h3> 二、Vue的初体验</h3>
<hr>
<h4> 2.1在页面引入vue的js文件即可。</h4>
<blockquote>
<p>注意：cdn是一种加速策略，能够快速的提供js文件</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.2 在页面中绑定vue元素</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 2.3 创建vue对象，设计对象的内容</h4>
<blockquote>
<p>其中该vue对象，绑定了页面中id是app的那个div</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 2.4 在页面的元素中使用插值表达式来使用vue对象中的内容</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 三、 插值表达式</h3>
<hr>
<blockquote>
<p>插值表达式的作用是在View中获得Model中的内容,</p>
<p>使用在标签内容中，不能在标签上使用。插值表达式的写法“{{表达式}}”</p>
<p>Model中的内容如下：</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 3.1 简单使用插值表达式获取数据</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时，页面上将会显示"Hello world!"</p>
</blockquote>
<h4> 3.2 在插值表达式中获取数组中的内容</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时，页面上会显示“3”，也就是数组中的第三个元素被获取。</p>
</blockquote>
<h4> 3.3 使用插值表达式获取对象中的属性</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时，页面上会显示“20”，也就是对象中age属性的值。</p>
</blockquote>
<h4> 3.4 使用插值表达式调用Vue中的方法</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时，页面上会显示“hello vue”，也就是调用了vue对象中的sayHello方法，并展示了方法的返回值。</p>
</blockquote>
<h3> 四、Vue对象总结</h3>
<hr>
<blockquote>
<p>Vue.js通过加载js，实现对页面的快速渲染。vue封装的js该如何使用？ 就必须了解MVVM双向数据绑定模式。Vue将视图层和数据层分离，通过MVVM建立视图层和数据层的连接。其中，插值表达式是一种连接方式，可以通过插值表达式以多种方式，快速的从数据层获取数据并展示在视图层上。数据层Vue对象，也是由很多部分组成，比如之前介绍的el，data，methods等，以及之后要介绍的mount，computed等。</p>
</blockquote>
<h3> 五、Vue的分支 v-if</h3>
<hr>
<h4> 5.1 v-if</h4>
<blockquote>
<p>Vue中的分支语句v-if非常好理解，逻辑跟Java中的if-else相同。v-if语句块包含以下内容：</p>
<ul>
<li>v-if</li>
<li>v-else</li>
<li>v-else-if</li>
</ul>
<p>接下来以一个简单例子即可理解：</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>从这个例子可以看出，vue对象中的data提供了分支的条件。根据条件，如果是true，则v-if的内容就会显示，反之不显示。</p>
</blockquote>
<h4> 5.2 v-show</h4>
<blockquote>
<p>v-if和v-show之间有着看似相同的效果，但优化上却有区别。先看下面这个例子：</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>通过点击“今晚彩票开奖”按钮，能切换rich的值，此时发现，v-if和v-show的显示状态都会来回切换。看起来是一样的，但通过查看控制台代码发现，v-show实际会将p标签的css样式的display属性设为none来达到隐藏的效果。</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<blockquote>
<p>而v-if是直接在页面上添加和删除p标签来达到效果，因此v-show在反复切换的应用场景下，效率比v-if更高。</p>
</blockquote>
<h3> 六、Vue的循环 v-for</h3>
<hr>
<blockquote>
<p>Vue中的循环关键字并没有Java的那么多，只有v-for，但用法上有多种。接下来我们来逐一介绍。</p>
</blockquote>
<h4> 6.1 普通的for循环</h4>
<blockquote>
<p>我们需要定义数据源，然后通过v-for来遍历数据源，再使用差值表达式输出数据。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>在这个例子中，数据源提供了一个数组。视图层通过v-for来循环输出多个li标签，非常简单。</p>
</blockquote>
<h4> 6.2 带着索引的for</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时的i就是每次循环的循环变量 ，从0开始一直到元素个数-1</p>
</blockquote>
<h4> 6.3 遍历一个对象中的信息： v、k、i</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>v、k、i 这几个字符可以自己定义，分别表示每次循环内容的值、键、序号。</p>
<ul>
<li>v: 循环中每条数据的值   小鱼、20、如花</li>
<li>k: 循环中每天数据的键   username、age、girl</li>
<li>i: 循环的序号，从0开始</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>页面效果如下：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h4> 6.4 遍历一个对象数组：嵌套的for循环</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>可以清楚的看到，此时数据源是一个student数组，通过两层v-for循环，外层遍历数组中的每个student对象，内层v-for遍历每个对象的v、k、i。</p>
<p>页面效果如下：</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<h3> 七、Vue的属性绑定</h3>
<hr>
<blockquote>
<p>Vue提供了多个关键字，能快速的将数据对象中的值绑定在视图层中。</p>
</blockquote>
<h4> 7.1 v-model</h4>
<blockquote>
<p>通过v-model将标签的value值与vue对象中的data属性值进行绑定。要求，使用v-model一定是当前标签具有value属性，通常用于表单标签。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时input标签中加入了“v-model='title'”，表示input的value值与vue对象中的title属性绑定，当在input输入框中输入内容会实时修改title的值。于是{{title}}插值表达式能实时输出input输入框内的值。</p>
</blockquote>
<table>
<thead>
<tr>
<th>页面效果如下：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h4> 7.2 v-bind</h4>
<blockquote>
<p>我们知道插值表达式是不能写在html的标签的属性内的，那如果一定要用vue中的属性作为html标签的属性的内容，就可以通过v-bind进行属性绑定。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>这样，a标签内的href属性就可以使用vue对象中的属性值。</p>
<p>注意： v-bind也可以简写，使用冒号“:”来代替。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 八、Vue的事件绑定</h3>
<hr>
<blockquote>
<p>关于事件，要把握好三个步骤：设参、传参和接参。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从这里例子中：</p>
<ul>
<li>设参：</li>
</ul>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>传参：</li>
</ul>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>接参：</li>
</ul>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote>
<p>接下来我们来看一下VUE中如何进行事件绑定。</p>
</blockquote>
<h4> 8.1 v-on</h4>
<blockquote>
<p>通过配合具体的事件名，来绑定vue中定义的函数</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时，该按钮，在点击时将会调用Vue对象中定义的changeMajor方法。</p>
<p>注意： v-on也可以简写，使用"@"替代。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 8.2 事件修饰符</h4>
<blockquote>
<p>可以使用Vue中定义好的事件修饰符，快速达到效果。查看以下例子：</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>当鼠标经过P标签区域内时，区域内就会显示X和Y轴的坐标，如果经过P标签内的Span标签内时，此时会调用事件属性mousemove.stop预定的效果，鼠标移动的效果将会被取消，X和Y不再显示信息。</p>
</blockquote>
<h4> 8.3计算属性：computed</h4>
<h5> 8.3.1 什么是计算属性</h5>
<blockquote>
<p>计算属性的重点突出在 属性 两个字上（属性是名词），首先它是个 属性 其次这个属性有 计算 的能力（计算是动词），这里的 计算 就是个函数；简单点说，它就是一个能够将计算结果缓存起来的属性（将行为转化成了静态的属性），仅此而已；</p>
</blockquote>
<h5> 8.3.2 计算属性与方法的区别</h5>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p><a href="">说明</a></p>
<ul>
<li>methods：定义方法，调用方法使用 currentTime1()，需要带括号</li>
<li>computed：定义计算属性，调用属性使用 currentTime2，不需要带括号；this.message 是为了能够让 currentTime2 观察到数据变化而变化</li>
</ul>
<p>注意：methods 和 computed 里的方法不能重名</p>
</blockquote>
<h5> 8.3.3 测试效果</h5>
<p>仔细看图中说明，观察其中的差异</p>
<figure><figcaption></figcaption></figure>
<h5> 8.3.4 结论</h5>
<blockquote>
<p>调用方法时，每次都需要进行计算，既然有计算过程则必定产生系统开销，那如果这个结果是不经常变化的呢？此时就可以考虑将这个结果缓存起来，采用计算属性可以很方便的做到这一点；计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销</p>
</blockquote>
<h3> 九、Vue的组件化</h3>
<hr>
<h4> 9.1 什么是“组件化”</h4>
<blockquote>
<p>Vue的组件化设计思想借鉴了Java的面向对象思想。Java认为万物皆对象，在Vue中，万物皆组件。</p>
<p>简单理解：Html中的每一个标签都可以认为是一个组件。书写组件可以认为就在定义Html中能够识别的标签。只是这些自定义的标签是用源HTML中定义好的标签组装的新标签。</p>
<p>也就是说，在实际的vue项目中，以及使用了Vue框架的项目中，Vue的对象都会以组件的形式出现，能被反复使用。</p>
<p>要想实现组件化，需要在页面中注册组件：关于注册的方式有两种，分别是全局注册和本地注册。</p>
</blockquote>
<h5> 9.1.1 组件的全局注册</h5>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 9.1.2 组件的本地注册</h5>
<blockquote>
<p>vue的全局注册，也就意味着在页面的任意一个被vue绑定过的div中，都可以使用全局注册了的vue组件。</p>
<p>但是，如果是对vue组件进行本地注册，那么在其他被vue绑定的div中，不能使用该组件。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 9.1.3 小结</h5>
<blockquote>
<p>这是一个完整的Vue组件。该组件包含了三个部分：template（html视图层内容）、script（Model层）、style（CSS样式）。这样封装好的组件可以被复用，也可以作为其他组件的组成部分而被封装——Java的面向对象再次体现。</p>
<ul>
<li>
<p>特点1： template标签内，必须有且只能有一个根标签。</p>
</li>
<li>
<p>特点2： componet中注册的组件中的data，必须是函数的形式。</p>
<p>如下：</p>
</li>
</ul>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 9.2 组件的生命周期</h4>
<blockquote>
<p>Vue中的组件也是有生命周期的。一个Vue组件会经历：初始化、创建、绑定、更新、销毁等阶段，不同的阶段，都会有相应的生命周期钩子函数被调用。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table>
<thead>
<tr>
<th>组件的生命周期钩子</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h3> 十、使用Vue-Cli搭建Vue项目</h3>
<hr>
<h4> 10.1 什么是vue-cli</h4>
<blockquote>
<p>cli: Command Line 命令行工具，vue-cli就是vue的命令行工具，也称之为<strong>脚手架</strong>，使用vue-cli提供的各种命令可以拉取、创建、运行我们需要使用到的框架，比如webpack、Element UI、Element Admin等等。那么要想使用vue-cli命令，需要先安装node.js。</p>
</blockquote>
<h4> 10.2 node.js的介绍及安装</h4>
<h5> node.js的介绍</h5>
<blockquote>
<p>node.js提供了前端程序的运行环境，可以把node.js理解成是运行前端程序的服务器。</p>
</blockquote>
<h5> node.js的安装</h5>
<blockquote>
<p>从官网下载安装即可：<br>
<a href="http://nodejs.cn/download/" target="_blank" rel="noopener noreferrer">http://nodejs.cn/download/</a></p>
</blockquote>
<table>
<thead>
<tr>
<th>测试node.js是否安装成功： 在DOS窗口中输入“node -v” 查看版本，如果看到版本，就表示安装成功。</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h4> 10.3 使用node.js安装vue-cli</h4>
<p>使用如下命令安装vue-cli</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote>
<ul>
<li>npm： 使用node.js的命令</li>
<li>install： 安装</li>
<li>vue-cli： 要安装的vue-cli</li>
<li>-g： 全局安装</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>当出现以下界面，表示正在安装：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>如果使用npm官方镜像速度比较慢，可以使用淘宝镜像来安装：</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote>
<p>之后使用npm命令时就可以替换成cnpm</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 10.4 使用vue-cli下载项目骨架搭建我们的项目</h4>
<blockquote>
<p>就像maven一样，vue为我们提供了一些官方项目骨架。使用vue list命令可以列出当前官方提供的骨架，可以使用这些骨架来快速搭建出项目。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 10.5 创建项目目录并打开</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 10.6 使用Webpack骨架快速创建项目</h4>
<blockquote>
<p>在my-vue-project目录中使用以下命令下载项目骨架</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote>
<ul>
<li>webpack: 骨架名称</li>
<li>my-project1: 项目名称</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>过程中会出现如下界面，需要手动操作。</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>出现如下界面，表示安装成功。</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>进入到my-project1文件夹内后，使用以下命令来运行项目。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><figcaption></figcaption></figure>
<table>
<thead>
<tr>
<th>访问<a href="http://localhost:8081" target="_blank" rel="noopener noreferrer">http://localhost:8081</a>，页面效果如下：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>此时，项目目录及各目录介绍如下：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<figure><figcaption></figcaption></figure>
<h4> 10.7 webpack项目的几个常用命令</h4>
<blockquote>
<ul>
<li>
<p>npm install</p>
<p>在运行和调试项目前，一般都需要先执行该命令，目的是安装项目运行所需要的环境。</p>
</li>
<li>
<p>npm run dev</p>
<p>以调试的方式运行项目</p>
</li>
<li>
<p>npm run build</p>
<p>生成用于项目部署所需的最小资源，生成的内容存放在build文件夹内。</p>
</li>
</ul>
</blockquote>
<h3> 十一、Vue组件间的参数传递</h3>
<hr>
<h4> 11.1 idea中安装Vue插件</h4>
<blockquote>
<p>在idea中下载vue插件</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<blockquote>
<p>在idea中配置，让idea能够操作.vue文件</p>
</blockquote>
<p>​	</p>
<h4> 11.2 在项目中创建子组件</h4>
<blockquote>
<p>创建子组件Content组件</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 11.3 注册子组件</h4>
<blockquote>
<p>在main.js中注册子组件</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 11.4 在App.vue中使用组件并传递参数</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 11.5 父传子</h4>
<blockquote>
<p>通过子组件的props部分，来指明可以接收的参数，父组件通过在标签中写明参数的键值对来传递参数。</p>
<p>​	props是表示一个组件的参数部分，那么props的写法有两种：</p>
<p>​		1）props:[参数列表]</p>
<p>​		比如： props:['MyProp1','MyProp2',...]</p>
<p>​		2）props:{参数名1:{type:String,required:true,default:'XX'},参数名2:{...}}</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<h4> 11.6 子传父</h4>
<blockquote>
<p>子传父的过程十分复杂，下列图解中已经配上了详细的步骤。</p>
</blockquote>
<figure><figcaption></figcaption></figure>
<h3> 十二、Vue-router 路由</h3>
<hr>
<h4> 12.1 安装路由模块</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 12.2 引入路由模块并使用</h4>
<blockquote>
<p>在main.js中引入路由模块并使用</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 12.3 路由初体验</h4>
<h5> 12.3.1 创建App.vue</h5>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>改变url，发现中的内容发生改变</p>
<ul>
<li><a href="http://localhost:8080/#/" target="_blank" rel="noopener noreferrer">http://localhost:8080/#/</a>	显示home</li>
<li><a href="http://localhost:8080/#/user" target="_blank" rel="noopener noreferrer">http://localhost:8080/#/user</a>     显示user</li>
</ul>
<p>向router实例中添加mode属性：</p>
<ul>
<li>值"hash": url带#  适用于调试模式</li>
<li>值"history"  url不带#</li>
</ul>
</blockquote>
<h5> 12.3.2 创建Home.vue</h5>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 12.3.3 创建Product.vue</h5>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 12.3.4 修改静态路由表</h5>
<blockquote>
<p>修改路由表src/router/index.js</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> </h4>
<h4> 12.4 参数的传递</h4>
<blockquote>
<p>在路由表中设参</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>在App.vue中传参</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>在Product.vue中接参</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 12.5 程序式路由的实现</h4>
<blockquote>
<p>使用<code>&lt;router-link&gt;</code>进行路由跳转是有局限性的，可以通过 this.$router.push("/Product/1") 的js方式实现路由跳转，更加灵活。</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 十三、使用Axios发送请求</h3>
<hr>
<h4> 13.1  什么是 Axios</h4>
<p>Axios 是一个开源的可以用在浏览器端和 NodeJS 的异步通信框架，她的主要作用就是实现 AJAX 异步通信，其功能特点如下：</p>
<ul>
<li>从浏览器中创建 XMLHttpRequests</li>
<li>从 node.js 创建 http 请求</li>
<li>支持 Promise API</li>
<li>拦截请求和响应</li>
<li>转换请求数据和响应数据</li>
<li>取消请求</li>
<li>自动转换 JSON 数据</li>
<li>客户端支持防御 XSRF（跨站请求伪造）</li>
</ul>
<p>GitHub：<a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">https://github.com/axios/axios</a></p>
<h4> 13.2 为什么要使用 Axios</h4>
<p>由于 Vue.js 是一个 视图层框架 并且作者（尤雨溪）严格准守 SoC （关注度分离原则），所以 Vue.js 并不包含 AJAX 的通信功能，为了解决通信问题，作者单独开发了一个名为 vue-resource 的插件，不过在进入 2.0 版本以后停止了对该插件的维护并推荐了 Axios 框架</p>
<h4> 13.3 Axios的使用</h4>
<h5> 13.3.1 安装vue axios</h5>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 13.3.2 在main.js中引入</h5>
<p>在项目中使用axios模块</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 13.3.3 发送ajax请求</h5>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 13.3.4 服务端解决跨域问题</h5>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在spring-mvc.xml中加入上述这一段。其中，allowed-origins指的是允许的访问源的域名，"*"表示任何人都可以访问，也可以指明具体的域名</p>
<h5> 13.3.5 解决axios无法传递data中的参数问题</h5>
<p>原因：默认情况下发送axios时请求头中的内容类型为： （后端没有使用@RequestBody）</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而实际服务端需要的是：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因此，使用axios的qs内置库中的方法进行内容类型的转换。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 十四、Vue实战项目：Webpack登录验证后路由至列表页</h3>
<hr>
<table>
<thead>
<tr>
<th>对项目进行中的内容进行调整，结构如下：</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>各部分内容：</p>
</blockquote>
<h4> 14.1 router路由模块： index.js（路由配置表）</h4>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 14.2 使用Element-UI组件库</h4>
<h5> 14.2.1 安装</h5>
<blockquote>
<p>在项目文件夹内使用命令来安装element-ui模块</p>
</blockquote>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5> 14.2.2 使用</h5>
<blockquote>
<p>在vue项目中引入element-ui并使用。在 main.js 中写入以下内容：</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 14.2.3 在Element-UI组件库中查找组件</h5>
<table>
<thead>
<tr>
<th>在官方组件库中，根据需求找到组件，然后在项目中使用。</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h4> 14.3 编写登录组件：Login.vue</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>输入的用户名和密码，通过Axios请求去后端做校验，若校验成功则路由至Home组件。</p>
</blockquote>
<table>
<thead>
<tr>
<th>登录页面的展示效果：（Element UI）</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<h4> 14.4 编写入口js：main.js</h4>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 十五、 Vuex的应用</h3>
<hr>
<h4> 15.1 什么是Vuex</h4>
<blockquote>
<p>Vuex 是一个专为 Vue.js 应用程序开发的 状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p>
</blockquote>
<h4> 15.2 安装</h4>
<blockquote>
<p>在项目根目录执行如下命令来安装 Vuex</p>
<p>若失败，可使用cnpm</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote>
<p>修改 <code>main.js</code> 文件，导入 Vuex，关键代码如下：</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 15.3 配置 vuex</h4>
<h5> 15.3.1 创建 Vuex 配置文件</h5>
<blockquote>
<p>在 src 目录下创建一个名为 store 的目录并新建一个名为 index.js 文件用来配置 Vuex，代码如下：</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>修改 main.js 增加刚才配置的 store/index.js，关键代码如下：</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5> 15.3.2 解决浏览器刷新后 Vuex 数据消失问题</h5>
<ul>
<li>问题描述</li>
</ul>
<blockquote>
<p>Vuex 的状态存储是响应式的，当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。但是有一个问题就是：vuex 的存储的数据只是在页面的中，相当于我们定义的全局变量，刷新之后，里边的数据就会恢复到初始化状态。但是这个情况有时候并不是我们所希望的。</p>
</blockquote>
<ul>
<li>解决方案</li>
</ul>
<blockquote>
<p>监听页面是否刷新，如果页面刷新了，将 state 对象存入到 sessionStorage 中。页面打开之后，判断 sessionStorage 中是否存在 state 对象，如果存在，则说明页面是被刷新过的，将 sessionStorage 中存的数据取出来给 vuex 中的 state 赋值。如果不存在，说明是第一次打开，则取 vuex 中定义的 state 初始值。</p>
</blockquote>
<ul>
<li>修改代码</li>
</ul>
<blockquote>
<p>在 App.vue 中增加监听刷新事件</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>修改 store/index.js 中的 state</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>主要功能与配置演示</title>
      <link>https://boxsir.gitee.io/demo/</link>
      <guid>https://boxsir.gitee.io/demo/</guid>
      <source url="https://boxsir.gitee.io/rss.xml">主要功能与配置演示</source>
      <description>目录 页面展示 (page.md); Markdown 展示 (markdown.md); 禁用展示 (disable.md); 加密展示 (encrypt.md);</description>
      <category>使用指南</category>
      <pubDate>Fri, 15 Sep 2023 05:42:19 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 目录</h2>
<ul>
<li>
<p><a href="/demo/page.html" target="blank">页面展示</a></p>
</li>
<li>
<p><a href="/demo/markdown.html" target="blank">Markdown 展示</a></p>
</li>
<li>
<p><a href="/demo/disable.html" target="blank">禁用展示</a></p>
</li>
<li>
<p><a href="/demo/encrypt.html" target="blank">加密展示</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>